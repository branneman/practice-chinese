{"version":3,"sources":["utils/render-route.js","utils/chinese.js","utils/random.js","utils/type-checks.js","containers/pages/vocab/index.js","containers/pages/hsk/index.js","utils/arabic2chinese.js","containers/pages/numbers/index.js","containers/app/routes.js","containers/pages/home.js","containers/pages/not-found.js","presenters/atoms/logo/index.js","presenters/atoms/nav/index.js","presenters/molecules/header/index.js","containers/app/index.js","index.js"],"names":["RenderRoute","props","routes","map","route","i","key","path","render","component","RE_PUNCTUATION","RE_WHITESPACE","isEqualCharacters","attempt","answer","xf","compose","s","replace","randomInt","min","max","Math","round","random","shuffle","xs","ys","slice","currentIndex","length","randomIndex","temporaryValue","floor","isStr","val","isArr","Array","isArray","isPOJO","x","Object","isFunc","isSymbol","getPrototypeOf","prototype","VOCAB_BASE_URL","VOCAB_URL_VOCAB1","VOCAB_URL_VOCAB2","VOCAB_URL_SENTENCES","shuffleData","assoc","Infinity","isValidData","data","some","d","zhongwen","english","getInitialData","hsk","mods","base","category","a","div1000","div100","div10x","div10","pattern_thousands","pattern_21_99","pattern_tens","pattern_0_10","div10x0","div10xx","pattern_hundreds","pattern_101_999","pattern_10_19","getSemiRandomInt","spec","weights","reduce","acc","concat","weight","fill","weightedRandomInt","answerRef","useRef","useState","setData","state","setState","useEffect","Promise","all","fetch","resVocab1","resVocab2","resSentences","text","jsonStrVocab1","jsonStrVocab2","jsonStrSentences","JSON","parse","vocab2","sentences","vocab1","Error","console","log","answers","setAnswers","question","setQuestion","nextQuestion","next","current","setTimeout","focus","fn","e","preventDefault","keyCode","nextAction","window","addEventListener","removeEventListener","correct","value","checkAnswer","className","join","ref","type","onClick","pinyin1","p","filter","getPercentageCorrect","name","word","n","abs","RegExp","arabic2chinese","int","match","isExact","Logo","alt","src","Nav","isOpen","setOpen","renderRoutes","indent","to","find","y","isNotFound","sortRoutes","Header","App","basename","pkg","homepage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd32559a.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nexport default function RenderRoute(props) {\n  return (\n    <Switch>\n      {props.routes.map((route, i) => (\n        <Route\n          key={i}\n          path={route.path}\n          render={(props) => (\n            <route.component {...props} routes={route.routes} />\n          )}\n        />\n      ))}\n    </Switch>\n  )\n}\n","import { compose } from 'ramda'\n\nconst RE_PUNCTUATION = /[.。,，!！?？\\-－]+/g // Both half and full-width\nconst RE_WHITESPACE = /\\s+/g\n\nexport const isEqualCharacters = (attempt, answer) => {\n  const punctuation = (s) => s.replace(RE_PUNCTUATION, '')\n  const whitespace = (s) => s.replace(RE_WHITESPACE, '')\n  const xf = compose(punctuation, whitespace)\n  return xf(attempt) === xf(answer)\n}\n","export function randomInt(min, max) {\n  return min + Math.round(Math.random() * (max - min))\n}\n\n/**\n * @example\n *   weightedRandomInt([\n *     { min: 0, max: 25, weight: 8 },\n *     { min: 26, max: 50, weight: 4 },\n *     { min: 51, max: 75, weight: 2 },\n *     { min: 76, max: 100, weight: 1 }\n *   ])\n * @param {Object<{ min: Number, max: Number, weight: Number }>} spec\n */\nexport function weightedRandomInt(spec) {\n  const weights = spec.reduce(\n    (acc, x, i) => acc.concat(Array(x.weight).fill(i)),\n    []\n  )\n  const rand = randomInt(0, weights.length - 1)\n  const { min, max } = spec[weights[rand]]\n  return randomInt(min, max)\n}\n\n/**\n * Fisher-Yates Shuffle: unbiased array shuffle algorithm\n * @param {Array} xs\n * @returns {Array}\n */\nexport function shuffle(xs) {\n  const ys = xs.slice()\n\n  let currentIndex = ys.length\n  let randomIndex = null\n  let temporaryValue = null\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex -= 1\n\n    temporaryValue = ys[currentIndex]\n    ys[currentIndex] = ys[randomIndex]\n    ys[randomIndex] = temporaryValue\n  }\n\n  return ys\n}\n","/**\n */\nexport function isDef(x) {\n  return !isUndef(x) && !isNull(x)\n}\n\n/**\n * Does not match: `null`\n */\nexport function isUndef(val) {\n  return typeof val === 'undefined'\n}\n\n/**\n * Does not match: `undefined`\n */\nexport function isNull(val) {\n  return val === null\n}\n\n/**\n */\nexport function isBool(val) {\n  return typeof val === 'boolean'\n}\n\n/**\n * Does not match: `NaN`, `Infinity`, `-Infinity`\n */\nexport function isNum(val) {\n  return typeof val === 'number' && isFinite(val)\n}\n\n/**\n * Does not match: `NaN`, `Infinity`, `-Infinity`\n */\nexport function isInt(val) {\n  return typeof val === 'number' && isFinite(val) && Math.floor(val) === val\n}\n\n/**\n */\nexport function isStr(val) {\n  return typeof val === 'string'\n}\n\n/**\n */\nexport function isArr(val) {\n  return Array.isArray(val)\n}\n\n/**\n * Does not match: arrays, functions, symbols\n */\nexport function isObj(val) {\n  return val === Object(val) && !isArr(val) && !isFunc(val) && !isSymbol(val)\n}\n\n/**\n */\nexport function isPOJO(x) {\n  return isObj(x) && Object.getPrototypeOf(x) === Object.prototype\n}\n\n/**\n */\nexport function isFunc(val) {\n  return typeof val === 'function'\n}\n\n/**\n */\nexport function isSymbol(val) {\n  return typeof val === 'symbol'\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { compose, map, filter, slice, assoc } from 'ramda'\n// import useVisualViewport from '../../../hooks/viewport'\n\nimport { isEqualCharacters } from '../../../utils/chinese'\nimport { shuffle } from '../../../utils/random'\nimport { isPOJO, isArr, isStr } from '../../../utils/type-checks'\n\nimport './index.scss'\n\nconst FOCUS_DELAY_MS = 50\nconst ENTER_KEY = 13\nconst VOCAB_BASE_URL = `https://gist.githubusercontent.com/branneman/20d2b2cc1e234c4b664f1cf3962082e7/raw`\nconst VOCAB_URL_VOCAB1 = `${VOCAB_BASE_URL}/zhongwen-vocab-vocab1.json`\nconst VOCAB_URL_VOCAB2 = `${VOCAB_BASE_URL}/zhongwen-vocab-vocab2.json`\nconst VOCAB_URL_SENTENCES = `${VOCAB_BASE_URL}/zhongwen-vocab-sentences.json`\n\nexport const shuffleData = compose(\n  shuffle,\n  map(assoc('correct', null)),\n  slice(0, Infinity)\n)\n\nexport const isValidData = (data) => {\n  if (!isArr(data)) return false\n  return !data.some((d) => {\n    if (!isPOJO(d)) return true\n    if (!isStr(d.zhongwen)) return true\n    if (!isArr(d.english)) return true\n    return !d.english.some(isStr)\n  })\n}\n\nexport const getPercentageCorrect = (answers) => {\n  const p = filter((x) => x.correct === true, answers).length / answers.length\n  return Math.round(p * 10000) / 100 // Safely round to 2 decimals\n}\n\nexport default function VocabPage() {\n  const answerRef = useRef(null)\n\n  // const visualViewport = useVisualViewport()\n\n  const [data, setData] = useState(null)\n  const [state, setState] = useState('loading')\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const [resVocab1, resVocab2, resSentences] = await Promise.all([\n          fetch(VOCAB_URL_VOCAB1),\n          fetch(VOCAB_URL_VOCAB2),\n          fetch(VOCAB_URL_SENTENCES),\n        ])\n        const [\n          jsonStrVocab1,\n          jsonStrVocab2,\n          jsonStrSentences,\n        ] = await Promise.all([\n          resVocab1.text(),\n          resVocab2.text(),\n          resSentences.text(),\n        ])\n        const [vocab1, vocab2, sentences] = [\n          JSON.parse(jsonStrVocab1),\n          JSON.parse(jsonStrVocab2),\n          JSON.parse(jsonStrSentences),\n        ]\n        if (\n          !isValidData(vocab1) ||\n          !isValidData(vocab2) ||\n          !isValidData(sentences)\n        ) {\n          throw new Error('Error: JSON not valid')\n        }\n        setData({ vocab1, vocab2, sentences })\n        setState('start')\n      } catch (err) {\n        console.log(err)\n        setData(err)\n        setState('error')\n      }\n    })()\n  }, [])\n\n  const [answers, setAnswers] = useState(null)\n  const checkAnswer = () => {\n    const zhongwen = answers[question]\n    const correct = isEqualCharacters(\n      answerRef.current.value,\n      zhongwen.zhongwen\n    )\n\n    zhongwen.answer = answerRef.current.value\n    zhongwen.correct = correct\n    setAnswers(answers)\n\n    setState(correct ? 'correct' : 'incorrect')\n  }\n\n  const [question, setQuestion] = useState(0)\n  const nextQuestion = () => {\n    const next = question + 1\n    if (next >= answers.length) {\n      setState('done')\n    } else {\n      setQuestion(next)\n      setState('question')\n    }\n  }\n\n  useEffect(() => {\n    if (answerRef.current)\n      setTimeout(() => answerRef.current.focus(), FOCUS_DELAY_MS)\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction = () => 0\n  switch (state) {\n    case 'question':\n      nextAction = () => checkAnswer()\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-description\">Translate to Chinese</p>\n          <p className=\"assignment-text assignment-text--smaller\">\n            {answers[question].english.join(', ')}\n          </p>\n          <input ref={answerRef} className=\"practice-input\" type=\"text\" />\n          <button className=\"cta--next\" onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => nextQuestion()\n      return (\n        <section className=\"section section--correct section--vocab-practice\">\n          <p className=\"assignment-result\">Correct!</p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => nextQuestion()\n      return (\n        <section className=\"section section--incorrect section--vocab-practice\">\n          <p className=\"assignment-result\">Incorrect!</p>\n          {answers[answers.length - 1] && (\n            <>\n              <p className=\"assignment-description\">Your answer:</p>\n              <p className=\"assignment-description\">\n                {answers[question].answer}\n              </p>\n              <p className=\"assignment-description\">Correct answer:</p>\n              <p className=\"assignment-description\">\n                {answers[question].zhongwen}\n              </p>\n              <p className=\"assignment-description\">\n                {answers[question].pinyin1}\n              </p>\n            </>\n          )}\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'done':\n      nextAction = () => setState('start')\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-result\">\n            Correct: {getPercentageCorrect(answers)}%\n          </p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Restart\n          </button>\n        </section>\n      )\n\n    case 'loading':\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-description\">Loading...</p>\n        </section>\n      )\n\n    case 'error':\n      return (\n        <section className=\"section section--incorrect section--vocab-practice\">\n          <p className=\"assignment-description\">\n            Error while loading vocab JSON\n          </p>\n        </section>\n      )\n\n    default:\n    case 'start':\n      nextAction = (type) => () => {\n        setAnswers(shuffleData(data[type]))\n        setQuestion(0)\n        setState('question')\n      }\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-description\">\n            Translate personal vocabulary to Chinese\n          </p>\n          <button className=\"cta\" onClick={nextAction('vocab1')}>\n            Words: Vocab 1 (DL)\n          </button>\n          <button className=\"cta\" onClick={nextAction('vocab2')}>\n            Words: Vocab 2 (EUR)\n          </button>\n          <button className=\"cta\" onClick={nextAction('sentences')}>\n            Sentences\n          </button>\n        </section>\n      )\n  }\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { compose, map, filter, slice, assoc } from 'ramda'\n// import useVisualViewport from '../../../hooks/viewport'\n\nimport hsk from '../../../data/hsk.json'\nimport { isEqualCharacters } from '../../../utils/chinese'\nimport { shuffle } from '../../../utils/random'\n\nimport './index.scss'\n\nconst FOCUS_DELAY_MS = 50\nconst ENTER_KEY = 13\n\nexport const getInitialData = () =>\n  compose(shuffle, map(assoc('correct', null)), slice(0, Infinity))(hsk)\n\nexport const getPercentageCorrect = (answers) => {\n  const p = filter((x) => x.correct === true, answers).length / answers.length\n  return Math.round(p * 10000) / 100 // Safely round to 2 decimals\n}\n\nexport default function HskPage() {\n  const answerRef = useRef(null)\n\n  // const visualViewport = useVisualViewport()\n\n  const [state, setState] = useState('start')\n\n  const [answers, setAnswers] = useState(getInitialData())\n  const checkAnswer = () => {\n    const word = answers[question]\n    const correct = isEqualCharacters(answerRef.current.value, word.word)\n\n    setState(correct ? 'correct' : 'incorrect')\n\n    word.correct = correct\n    setAnswers(answers)\n  }\n\n  const [question, setQuestion] = useState(0)\n  const nextQuestion = () => {\n    const next = question + 1\n    if (next >= answers.length) {\n      setState('done')\n    } else {\n      setQuestion(next)\n      setState('question')\n    }\n  }\n\n  useEffect(() => {\n    if (answerRef.current)\n      setTimeout(() => answerRef.current.focus(), FOCUS_DELAY_MS)\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction\n  switch (state) {\n    case 'question':\n      nextAction = () => checkAnswer()\n      return (\n        <section className=\"section section--hsk-practice\">\n          <p className=\"assignment-description\">Translate to Chinese</p>\n          <p className=\"assignment-text\">\n            {answers[question].english.join(', ')}\n          </p>\n          <input ref={answerRef} className=\"practice-input\" type=\"text\" />\n          <button className=\"cta--next\" onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => nextQuestion()\n      return (\n        <section className=\"section section--correct section--hsk-practice\">\n          <p className=\"assignment-result\">Correct!</p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => nextQuestion()\n      return (\n        <section className=\"section section--incorrect section--hsk-practice\">\n          <p className=\"assignment-result\">Incorrect!</p>\n          {answers[answers.length - 1] && (\n            <p className=\"assignment-description\">\n              Correct answer: {answers[question].word} (\n              {answers[question].pinyin1})\n            </p>\n          )}\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'done':\n      nextAction = () => {\n        setAnswers(getInitialData())\n        setQuestion(0)\n        setState('question')\n      }\n      return (\n        <section className=\"section section--correct section--hsk-practice\">\n          <p className=\"assignment-result\">\n            Correct: {getPercentageCorrect(answers)}%\n          </p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Restart\n          </button>\n        </section>\n      )\n\n    default:\n    case 'start':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--hsk-practice\">\n          <p className=\"assignment-description\">\n            Translate HSK1 words to Chinese\n          </p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Start\n          </button>\n        </section>\n      )\n  }\n}\n","const mods = {\n  neg: '负', // fù\n  1e1: '十', // shí\n  1e2: '百', // bǎi\n  1e3: '千', // qiān\n  1e4: '万', // wàn\n  1e8: '亿', // yì\n  1e12: '兆', // zhào\n  1e16: '京', // jīng\n  1e20: '垓', // gāi\n  1e24: '秭', // zǐ\n  1e28: '穰', // ráng\n  1e32: '沟', // gōu\n  1e36: '涧', // jiàn\n  1e40: '正', // zhēng\n  1e44: '载', // zài\n}\nconst base = [\n  '零', // líng\n  '一', // yī\n  '二', // èr\n  '三', // sān\n  '四', // sì\n  '五', // wǔ\n  '六', // liù\n  '七', // qī\n  '八', // bā\n  '九', // jiǔ\n  '十', // shí\n]\n\nexport default function arabic2chinese(a) {\n  let s = ''\n\n  if (a < 0) {\n    s += mods.neg\n    a = Math.abs(a)\n  }\n\n  // 1e4-1e8 category patterns\n  if (a >= 1e4 && a <= 1e8 - 1) {\n    const _ = (a - (a % 1e4)) / 1e4\n    s += category(_)\n    s += mods[1e4]\n\n    // dispatch to < 1e4 patterns\n    a = a % 1e4\n    if (a < 1e3) {\n      s += base[0]\n    }\n  }\n\n  // < 1e4 category patterns\n  s += category(a)\n\n  // More than one zero in a row becomes a single zero\n  s = s.replace(new RegExp(base[0] + '{2,3}', 'g'), base[0])\n\n  // Trailing zero's\n  if (s.length > 1) {\n    s = s.replace(new RegExp(base[0] + '+$'), '')\n  }\n\n  return s\n}\n\nfunction category(a) {\n  const div1000 = (x) => x % 1000 === 0\n  const div100x = (x) => x % 1000 < 10\n  const div10x0 = (x) => div1000(x - (x % 100)) && div10(x % 10)\n  const div10xx = (x) => div1000(x - (x % 100)) && !div10(x % 10)\n  const div100 = (x) => x % 100 === 0\n  const div10x = (x) => div100(x - (x % 10))\n  const div10 = (x) => x % 10 === 0\n\n  const pattern_thousands = (x) => base[x / 1000] + mods[1e3]\n  const pattern_101_999 = (x) => base[Math.floor(x / 100)] + mods[1e2]\n  const pattern_hundreds = (x) => base[x / 100] + mods[1e2]\n  const pattern_21_99 = (x) =>\n    base[Math.floor(x / 10)] + mods[1e1] + base[x - Math.floor(x / 10) * 10]\n  const pattern_tens = (x) => base[x / 10] + mods[1e1]\n  const pattern_10_19 = (x) => mods[1e1] + base[x - 10]\n  const pattern_0_10 = (x) => base[x]\n\n  let s = ''\n\n  // thousands pattern: 1000 = 1+1000\n  if (a >= 1000 && a <= 9999 && div1000(a)) {\n    s += pattern_thousands(a)\n  }\n\n  // 1001-9999 pattern: 1234 = 1+1000+2+100+3+10+4\n  if (a >= 1000 && a <= 9999 && !div1000(a)) {\n    s += pattern_thousands(a - (a % 1000))\n\n    // [1001] with zero's in the hundreds and tens place: 1001 = 1+1000+0+1\n    if (div100x(a)) {\n      s += base[0]\n      s += pattern_0_10(a % 100)\n    }\n\n    // [1010] with zero's in the hundreds and ones place: 1010 = 1+1000+0+1+10\n    else if (div10x0(a)) {\n      s += base[0]\n      s += pattern_tens(a % 100) // a = [1234 -> 34]\n    }\n\n    // [1011] with a zero in the hundreds place: 1011 = 1+1000+0+1+10+1\n    else if (div10xx(a)) {\n      s += base[0]\n      s += pattern_21_99(a % 100) // a = [1234 -> 34]\n    }\n\n    // dispatch to < 1000 patterns\n    else {\n      a -= Math.floor(a / 1000) * 1000\n    }\n  }\n\n  // hundreds pattern: 100 = 1+100\n  if (a >= 100 && a <= 999 && div100(a)) {\n    s += pattern_hundreds(a)\n  }\n\n  // 101-999 pattern\n  if (a >= 101 && a <= 999 && !div100(a)) {\n    s += pattern_101_999(a)\n\n    // with a zero in the ones place: 760 = 7+100+6+10\n    if (!div100(a) && div10(a) && !div10x(a)) {\n      s += pattern_tens(a - Math.floor(a / 100) * 100)\n    }\n\n    // with a zero in the tens place: 506 = 5+100+0+6\n    if (!div100(a) && !div10(a) && div10x(a)) {\n      s += base[0]\n      s += pattern_0_10(a - Math.floor(a / 100) * 100)\n    }\n\n    // generic: 135 = 1+100+3+10+5\n    if (!div100(a) && !div10(a) && !div10x(a)) {\n      s += pattern_21_99(a - Math.floor(a / 100) * 100)\n    }\n  }\n\n  // tens pattern: 30 = 3+10\n  if (a >= 20 && a <= 90 && div10(a)) {\n    s += pattern_tens(a)\n  }\n\n  // 21-99 pattern: 21 = 2+10+1\n  if (a >= 21 && a <= 99 && !div10(a)) {\n    s += pattern_21_99(a)\n  }\n\n  // 11-19 pattern: 11 = 10+1\n  if (a >= 11 && a <= 19) {\n    s += pattern_10_19(a)\n  }\n\n  // 0-10 pattern\n  if (a >= 0 && a <= 10) {\n    s += pattern_0_10(a)\n  }\n\n  return s\n}\n","import React, { useEffect, useRef, useState } from 'react'\n// import useVisualViewport from '../../../hooks/viewport'\n\nimport { weightedRandomInt } from '../../../utils/random'\nimport arabic2chinese from '../../../utils/arabic2chinese'\nimport { isEqualCharacters } from '../../../utils/chinese'\n\nimport './index.scss'\n\nconst FOCUS_DELAY_MS = 50\nconst ENTER_KEY = 13\n\nconst getSemiRandomInt = () =>\n  weightedRandomInt([\n    { weight: 2 /* 25% */, min: 0, max: 99 },\n    { weight: 2 /* 25% */, min: 0, max: 990 },\n    { weight: 2 /* 25% */, min: 0, max: 9999 },\n    { weight: 1 /* 12.5% */, min: -999, max: -1 },\n    { weight: 1 /* 12.5% */, min: -9999, max: -1 },\n  ])\n\nexport default function Numbers() {\n  const answerRef = useRef(null)\n\n  // const visualViewport = useVisualViewport()\n\n  const [state, setState] = useState('start')\n\n  const [answers, setAnswers] = useState([])\n  const addAnswer = (a) => setAnswers(answers.concat(a))\n  const checkAnswer = (n) => {\n    const correct = arabic2chinese(n)\n    const attempt = answerRef.current.value\n    setState(isEqualCharacters(attempt, correct) ? 'correct' : 'incorrect')\n    addAnswer({ n, attempt, correct })\n  }\n\n  useEffect(() => {\n    if (answerRef.current)\n      setTimeout(() => answerRef.current.focus(), FOCUS_DELAY_MS)\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction\n  switch (state) {\n    case 'question':\n      const int = getSemiRandomInt()\n      nextAction = () => checkAnswer(int)\n      return (\n        <section className=\"section section--numbers-practice\">\n          <p className=\"assignment-description\">Translate to Chinese</p>\n          <p className=\"assignment-text\">{int}</p>\n          <input ref={answerRef} className=\"practice-input\" type=\"text\" />\n          <button className=\"cta--next\" onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--correct section--numbers-practice\">\n          <p className=\"assignment-result\">Correct!</p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--incorrect section--numbers-practice\">\n          <p className=\"assignment-result\">Incorrect!</p>\n          {answers[answers.length - 1] && (\n            <p className=\"assignment-description\">\n              Correct answer: {answers[answers.length - 1].correct}\n            </p>\n          )}\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    default:\n    case 'start':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--numbers-practice\">\n          <p className=\"assignment-description\">\n            Translate arabic numbers to Chinese\n          </p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Start\n          </button>\n        </section>\n      )\n  }\n}\n","import Home from '../pages/home'\nimport NotFound from '../pages/not-found'\n\nimport Vocab from '../pages/vocab'\nimport HSK from '../pages/hsk'\nimport Numbers from '../pages/numbers'\n\nexport default [\n  {\n    path: '/vocab',\n    component: Vocab,\n    name: 'Vocab: Test',\n  },\n\n  {\n    path: '/hsk',\n    component: HSK,\n    name: 'HSK: Test',\n  },\n\n  {\n    path: '/numbers',\n    component: Numbers,\n    name: 'Numbers: Test',\n  },\n\n  {\n    path: '/',\n    component: (props) => (props.match.isExact ? Home(props) : NotFound(props)),\n    name: 'Home',\n  },\n]\n","import React from 'react'\n\nexport default function Home() {\n  return <div>Home</div>\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return <div>404 Not Found</div>\n}\n","import React from 'react'\n\nimport './index.scss'\n\nfunction Logo() {\n  return (\n    <figure className=\"logo\">\n      <img className=\"logo__svg\" alt=\"练习中文\" src=\"./static/img/logo.svg\" />\n      <h1 className=\"logo__title\">\n        <span>Practice</span> <span>Chinese</span>\n      </h1>\n    </figure>\n  )\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { find, filter, concat } from 'ramda'\n\nimport './index.scss'\n\n// Sort 'Search' first, remove NotFound\nexport function sortRoutes(routes) {\n  const isSearch = (x) => x.path === '/'\n  const isNotFound = (x) => x.path\n  const x = find(isSearch, routes)\n  const xs = filter((y) => y !== x && isNotFound(y), routes)\n  return concat([x], xs)\n}\n\nexport default function Nav({ routes }) {\n  const [isOpen, setOpen] = useState(false)\n\n  // Recursively render ol>li\n  const renderRoutes = (routes, indent = 0) => (\n    <ol className={`menu menu--indent${indent}`}>\n      {routes.map((route, i) => (\n        <li key={i}>\n          <Link to={route.path} onClick={() => setOpen(false)}>\n            {route.name}\n          </Link>\n          {route.routes && renderRoutes(route.routes, indent + 1)}\n        </li>\n      ))}\n    </ol>\n  )\n\n  if (!isOpen) {\n    return (\n      <div className=\"nav\">\n        <button\n          className=\"nav__toggle nav__toggle--open\"\n          onClick={() => setOpen(true)}\n        ></button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"nav\">\n      <button\n        className=\"nav__toggle nav__toggle--close\"\n        onClick={() => setOpen(false)}\n      ></button>\n      <nav className=\"nav__menu\">{renderRoutes(sortRoutes(routes))}</nav>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Logo from '../../atoms/logo'\nimport Nav from '../../atoms/nav'\n\nexport default function Header({ routes }) {\n  return (\n    <>\n      <Link to={'/'} className=\"logo__parent\">\n        <Logo />\n      </Link>\n      <Nav routes={routes} />\n    </>\n  )\n}\n","import React from 'react'\n\nimport { HashRouter as Router } from 'react-router-dom'\nimport RenderRoute from '../../utils/render-route'\nimport pkg from '../../../package.json'\nimport routes from './routes.js'\n\nimport Header from '../../presenters/molecules/header'\n\nimport './index.scss'\n\nexport default function App() {\n  return (\n    <Router basename={pkg.homepage}>\n      <div className=\"layout__container\">\n        <header className=\"layout__header\">\n          <Header routes={routes} />\n        </header>\n        <main className=\"layout__body\">\n          <RenderRoute routes={routes} />\n        </main>\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './containers/app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}