{"version":3,"sources":["utils/render-route.js","utils/random.js","containers/pages/hsk/index.js","utils/arabic2chinese.js","containers/pages/numbers/practice/index.js","containers/pages/not-found.js","containers/app/routes.js","containers/pages/numbers/index.js","containers/pages/home.js","presenters/atoms/logo/index.js","presenters/atoms/nav/index.js","presenters/molecules/header/index.js","containers/app/index.js","index.js"],"names":["RenderRoute","props","routes","map","route","i","key","path","render","component","randomInt","min","max","Math","round","random","shuffle","xs","ys","slice","currentIndex","length","randomIndex","temporaryValue","floor","getInitialData","compose","assoc","Infinity","hsk","mods","base","category","a","div1000","x","div100","div10x","div10","pattern_thousands","pattern_21_99","pattern_tens","pattern_0_10","s","div10x0","div10xx","pattern_hundreds","pattern_101_999","pattern_10_19","getSemiRandomInt","spec","weights","reduce","acc","concat","Array","weight","fill","weightedRandomInt","NumbersPracticePage","nextAction","useState","state","setState","answerRef","useRef","answers","setAnswers","checkAnswer","n","correct","abs","replace","RegExp","arabic2chinese","attempt","current","value","useEffect","focus","fn","e","preventDefault","keyCode","window","addEventListener","removeEventListener","int","className","ref","type","onClick","NotFound","question","setQuestion","nextQuestion","next","word","english","p","filter","getPercentageCorrect","name","match","isExact","NumbersPractice","Logo","alt","src","lang","Nav","isOpen","setOpen","renderRoutes","indent","to","find","y","isNotFound","sortRoutes","Header","App","basename","pkg","homepage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5679c6c.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nexport default function RenderRoute(props) {\n  return (\n    <Switch>\n      {props.routes.map((route, i) => (\n        <Route\n          key={i}\n          path={route.path}\n          render={(props) => (\n            <route.component {...props} routes={route.routes} />\n          )}\n        />\n      ))}\n    </Switch>\n  )\n}\n","export function randomInt(min, max) {\n  return min + Math.round(Math.random() * (max - min))\n}\n\n/**\n * @example\n *   weightedRandomInt([\n *     { min: 0, max: 25, weight: 8 },\n *     { min: 26, max: 50, weight: 4 },\n *     { min: 51, max: 75, weight: 2 },\n *     { min: 76, max: 100, weight: 1 }\n *   ])\n * @param {Object<{ min: Number, max: Number, weight: Number }>} spec\n */\nexport function weightedRandomInt(spec) {\n  const weights = spec.reduce(\n    (acc, x, i) => acc.concat(Array(x.weight).fill(i)),\n    []\n  )\n  const rand = randomInt(0, weights.length - 1)\n  const { min, max } = spec[weights[rand]]\n  return randomInt(min, max)\n}\n\n/**\n * Fisher-Yates Shuffle: unbiased array shuffle algorithm\n * @param {Array} xs\n * @returns {Array}\n */\nexport function shuffle(xs) {\n  const ys = xs.slice()\n\n  let currentIndex = ys.length\n  let randomIndex = null\n  let temporaryValue = null\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex -= 1\n\n    temporaryValue = ys[currentIndex]\n    ys[currentIndex] = ys[randomIndex]\n    ys[randomIndex] = temporaryValue\n  }\n\n  return ys\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { compose, map, filter, slice, assoc } from 'ramda'\n\nimport hsk from '../../../data/hsk.json'\nimport { shuffle } from '../../../utils/random'\n\nimport './index.scss'\n\nconst ENTER_KEY = 13\n\nexport const getInitialData = () =>\n  compose(shuffle, map(assoc('correct', null)), slice(0, Infinity))(hsk)\n\nexport const getPercentageCorrect = (answers) => {\n  const p = filter((x) => x.correct === true, answers).length / answers.length\n  return Math.round(p * 10000) / 100 // Safely round to 2 decimals\n}\n\nexport default function HskPage() {\n  const answerRef = useRef(null)\n\n  const [state, setState] = useState('start')\n\n  const [answers, setAnswers] = useState(getInitialData())\n  const checkAnswer = () => {\n    const word = answers[question]\n    const correct = answerRef.current.value === word.word\n\n    setState(correct ? 'correct' : 'incorrect')\n\n    word.correct = correct\n    setAnswers(answers)\n  }\n\n  const [question, setQuestion] = useState(0)\n  const nextQuestion = () => {\n    const next = question + 1\n    if (next >= answers.length) {\n      setState('done')\n    } else {\n      setQuestion(next)\n      setState('question')\n    }\n  }\n\n  useEffect(() => {\n    if (answerRef.current) answerRef.current.focus()\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction\n  switch (state) {\n    case 'question':\n      nextAction = () => checkAnswer()\n      return (\n        <section className=\"section section--hsk-practice\">\n          <p className=\"assignment-description\">Translate to Chinese</p>\n          <p className=\"assignment-text\">{answers[question].english}</p>\n          <input ref={answerRef} className=\"practice-input\" type=\"text\" />\n          <button className=\"cta--next\" onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => nextQuestion()\n\n      return (\n        <section className=\"section section--correct section--hsk-practice\">\n          <p className=\"assignment-result\">Correct!</p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => nextQuestion()\n      return (\n        <section className=\"section section--incorrect section--hsk-practice\">\n          <p className=\"assignment-result\">Incorrect!</p>\n          {answers[answers.length - 1] && (\n            <p className=\"assignment-description\">\n              Correct answer: {answers[answers.length - 1].correct}\n            </p>\n          )}\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'done':\n      nextAction = () => {\n        setAnswers(getInitialData())\n        setQuestion(0)\n        setState('question')\n      }\n      return (\n        <section className=\"section section--correct section--hsk-practice\">\n          <p className=\"\">Correct: {getPercentageCorrect(answers)}%</p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Restart\n          </button>\n        </section>\n      )\n\n    default:\n    case 'start':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--hsk-practice\">\n          <button className=\"cta--next\" onClick={nextAction}>\n            Start\n          </button>\n        </section>\n      )\n  }\n}\n","const mods = {\n  neg: '负', // fù\n  1e1: '十', // shí\n  1e2: '百', // bǎi\n  1e3: '千', // qiān\n  1e4: '万', // wàn\n  1e8: '亿', // yì\n  1e12: '兆', // zhào\n  1e16: '京', // jīng\n  1e20: '垓', // gāi\n  1e24: '秭', // zǐ\n  1e28: '穰', // ráng\n  1e32: '沟', // gōu\n  1e36: '涧', // jiàn\n  1e40: '正', // zhēng\n  1e44: '载' // zài\n}\nconst base = [\n  '零', // líng\n  '一', // yī\n  '二', // èr\n  '三', // sān\n  '四', // sì\n  '五', // wǔ\n  '六', // liù\n  '七', // qī\n  '八', // bā\n  '九', // jiǔ\n  '十' // shí\n]\n\nexport default function arabic2chinese(a) {\n  let s = ''\n\n  if (a < 0) {\n    s += mods.neg\n    a = Math.abs(a)\n  }\n\n  // 1e4-1e8 category patterns\n  if (a >= 1e4 && a <= 1e8 - 1) {\n    const _ = (a - (a % 1e4)) / 1e4\n    s += category(_)\n    s += mods[1e4]\n\n    // dispatch to < 1e4 patterns\n    a = a % 1e4\n    if (a < 1e3) {\n      s += base[0]\n    }\n  }\n\n  // < 1e4 category patterns\n  s += category(a)\n\n  // More than one zero in a row becomes a single zero\n  s = s.replace(new RegExp(base[0] + '{2,3}', 'g'), base[0])\n\n  // Trailing zero's\n  if (s.length > 1) {\n    s = s.replace(new RegExp(base[0] + '+$'), '')\n  }\n\n  return s\n}\n\nfunction category(a) {\n  const div1000 = (x) => x % 1000 === 0\n  const div100x = (x) => x % 1000 < 10\n  const div10x0 = (x) => div1000(x - (x % 100)) && div10(x % 10)\n  const div10xx = (x) => div1000(x - (x % 100)) && !div10(x % 10)\n  const div100 = (x) => x % 100 === 0\n  const div10x = (x) => div100(x - (x % 10))\n  const div10 = (x) => x % 10 === 0\n\n  const pattern_thousands = (x) => base[x / 1000] + mods[1e3]\n  const pattern_101_999 = (x) => base[Math.floor(x / 100)] + mods[1e2]\n  const pattern_hundreds = (x) => base[x / 100] + mods[1e2]\n  const pattern_21_99 = (x) =>\n    base[Math.floor(x / 10)] + mods[1e1] + base[x - Math.floor(x / 10) * 10]\n  const pattern_tens = (x) => base[x / 10] + mods[1e1]\n  const pattern_10_19 = (x) => mods[1e1] + base[x - 10]\n  const pattern_0_10 = (x) => base[x]\n\n  let s = ''\n\n  // thousands pattern: 1000 = 1+1000\n  if (a >= 1000 && a <= 9999 && div1000(a)) {\n    s += pattern_thousands(a)\n  }\n\n  // 1001-9999 pattern: 1234 = 1+1000+2+100+3+10+4\n  if (a >= 1000 && a <= 9999 && !div1000(a)) {\n    s += pattern_thousands(a - (a % 1000))\n\n    // [1001] with zero's in the hundreds and tens place: 1001 = 1+1000+0+1\n    if (div100x(a)) {\n      s += base[0]\n      s += pattern_0_10(a % 100)\n    }\n\n    // [1010] with zero's in the hundreds and ones place: 1010 = 1+1000+0+1+10\n    else if (div10x0(a)) {\n      s += base[0]\n      s += pattern_tens(a % 100) // a = [1234 -> 34]\n    }\n\n    // [1011] with a zero in the hundreds place: 1011 = 1+1000+0+1+10+1\n    else if (div10xx(a)) {\n      s += base[0]\n      s += pattern_21_99(a % 100) // a = [1234 -> 34]\n    }\n\n    // dispatch to < 1000 patterns\n    else {\n      a -= Math.floor(a / 1000) * 1000\n    }\n  }\n\n  // hundreds pattern: 100 = 1+100\n  if (a >= 100 && a <= 999 && div100(a)) {\n    s += pattern_hundreds(a)\n  }\n\n  // 101-999 pattern\n  if (a >= 101 && a <= 999 && !div100(a)) {\n    s += pattern_101_999(a)\n\n    // with a zero in the ones place: 760 = 7+100+6+10\n    if (!div100(a) && div10(a) && !div10x(a)) {\n      s += pattern_tens(a - Math.floor(a / 100) * 100)\n    }\n\n    // with a zero in the tens place: 506 = 5+100+0+6\n    if (!div100(a) && !div10(a) && div10x(a)) {\n      s += base[0]\n      s += pattern_0_10(a - Math.floor(a / 100) * 100)\n    }\n\n    // generic: 135 = 1+100+3+10+5\n    if (!div100(a) && !div10(a) && !div10x(a)) {\n      s += pattern_21_99(a - Math.floor(a / 100) * 100)\n    }\n  }\n\n  // tens pattern: 30 = 3+10\n  if (a >= 20 && a <= 90 && div10(a)) {\n    s += pattern_tens(a)\n  }\n\n  // 21-99 pattern: 21 = 2+10+1\n  if (a >= 21 && a <= 99 && !div10(a)) {\n    s += pattern_21_99(a)\n  }\n\n  // 11-19 pattern: 11 = 10+1\n  if (a >= 11 && a <= 19) {\n    s += pattern_10_19(a)\n  }\n\n  // 0-10 pattern\n  if (a >= 0 && a <= 10) {\n    s += pattern_0_10(a)\n  }\n\n  return s\n}\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport { weightedRandomInt } from '../../../../utils/random'\nimport arabic2chinese from '../../../../utils/arabic2chinese'\n\nimport './index.scss'\n\nconst ENTER_KEY = 13\n\nconst getSemiRandomInt = () =>\n  weightedRandomInt([\n    { weight: 3, min: 0, max: 99 },\n    { weight: 2, min: 0, max: 999 },\n    { weight: 1, min: -999, max: -1 },\n  ])\n\nexport default function NumbersPracticePage() {\n  const [state, setState] = useState('start')\n\n  const answerRef = useRef(null)\n\n  const [answers, setAnswers] = useState([])\n  const addAnswer = (a) => setAnswers(answers.concat(a))\n  const checkAnswer = (n) => {\n    const correct = arabic2chinese(n)\n    const attempt = answerRef.current.value\n    setState(attempt === correct ? 'correct' : 'incorrect')\n    addAnswer({ n, attempt, correct })\n  }\n\n  useEffect(() => {\n    if (answerRef.current) answerRef.current.focus()\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction\n  switch (state) {\n    case 'question':\n      const int = getSemiRandomInt()\n      nextAction = () => checkAnswer(int)\n      return (\n        <section className=\"section section--numbers-practice\">\n          <p className=\"assignment-description\">Translate to Chinese</p>\n          <p className=\"assignment-text\">{int}</p>\n          <input ref={answerRef} className=\"practice-input\" type=\"text\" />\n          <button className=\"cta--next\" onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--correct section--numbers-practice\">\n          <p className=\"assignment-result\">Correct!</p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--incorrect section--numbers-practice\">\n          <p className=\"assignment-result\">Incorrect!</p>\n          {answers[answers.length - 1] && (\n            <p className=\"assignment-description\">\n              Correct answer: {answers[answers.length - 1].correct}\n            </p>\n          )}\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    default:\n    case 'start':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--numbers-practice\">\n          <button className=\"cta--next\" onClick={nextAction}>\n            Start\n          </button>\n        </section>\n      )\n  }\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return <div>404 Not Found</div>\n}\n","import Home from '../pages/home'\n\nimport HSK from '../pages/hsk'\n\nimport Numbers from '../pages/numbers'\nimport NumbersPractice from '../pages/numbers/practice'\n\nimport NotFound from '../pages/not-found'\n\nexport default [\n  {\n    path: '/hsk',\n    component: HSK,\n    name: 'HSK',\n  },\n\n  {\n    path: '/numbers',\n    component: Numbers,\n    name: 'Numbers',\n    routes: [\n      {\n        path: '/numbers/practice',\n        component: (props) =>\n          props.match.isExact ? NumbersPractice(props) : NotFound(props),\n        name: 'Practice',\n      },\n    ],\n  },\n\n  {\n    path: '/',\n    component: (props) => (props.match.isExact ? Home(props) : NotFound(props)),\n    name: 'Home',\n  },\n]\n","import React from 'react'\n\nimport RenderRoute from '../../../utils/render-route'\n\nexport default function Numbers({ routes }) {\n  return <RenderRoute routes={routes} />\n}\n","import React from 'react'\n\nexport default function Home() {\n  return <div>Home</div>\n}\n","import React from 'react'\n\nimport './index.scss'\n\nfunction Logo() {\n  return (\n    <figure className=\"logo\">\n      <img className=\"logo__svg\" alt=\"练习中文\" src=\"./static/img/logo.svg\" />\n      <h1 className=\"logo__title\" lang=\"en\">\n        <span>Practice</span> <span>Chinese</span>\n      </h1>\n    </figure>\n  )\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { find, filter, concat } from 'ramda'\n\nimport './index.scss'\n\n// Sort 'Search' first, remove NotFound\nexport function sortRoutes(routes) {\n  const isSearch = (x) => x.path === '/'\n  const isNotFound = (x) => x.path\n  const x = find(isSearch, routes)\n  const xs = filter((y) => y !== x && isNotFound(y), routes)\n  return concat([x], xs)\n}\n\nexport default function Nav({ routes }) {\n  const [isOpen, setOpen] = useState(false)\n\n  // Recursively render ol>li\n  const renderRoutes = (routes, indent = 0) => (\n    <ol className={`menu menu--indent${indent}`}>\n      {routes.map((route, i) => (\n        <li key={i}>\n          <Link to={route.path} onClick={() => setOpen(false)}>\n            {route.name}\n          </Link>\n          {route.routes && renderRoutes(route.routes, indent + 1)}\n        </li>\n      ))}\n    </ol>\n  )\n\n  if (!isOpen) {\n    return (\n      <div className=\"nav\">\n        <button\n          className=\"nav__toggle nav__toggle--open\"\n          onClick={() => setOpen(true)}\n        >\n          <span>☰</span>\n        </button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"nav\">\n      <button\n        className=\"nav__toggle nav__toggle--close\"\n        onClick={() => setOpen(false)}\n      >\n        <span>⨯</span>\n      </button>\n      <nav className=\"nav__menu\">{renderRoutes(sortRoutes(routes))}</nav>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Logo from '../../atoms/logo'\nimport Nav from '../../atoms/nav'\n\nexport default function Header({ routes }) {\n  return (\n    <>\n      <Link to={'/'} className=\"logo__parent\">\n        <Logo />\n      </Link>\n      <Nav routes={routes} />\n    </>\n  )\n}\n","import React from 'react'\n\nimport { HashRouter as Router } from 'react-router-dom'\nimport RenderRoute from '../../utils/render-route'\nimport pkg from '../../../package.json'\nimport routes from './routes.js'\n\nimport Header from '../../presenters/molecules/header'\n\nimport './index.scss'\n\nexport default function App() {\n  return (\n    <Router basename={pkg.homepage}>\n      <div className=\"layout__container\">\n        <header className=\"layout__header\">\n          <Header routes={routes} />\n        </header>\n        <main className=\"layout__body\">\n          <RenderRoute routes={routes} />\n        </main>\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './containers/app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}