{"version":3,"sources":["utils/render-route.js","utils/type-checks.js","utils/random.js","containers/pages/vocab/index.js","containers/pages/hsk/index.js","utils/arabic2chinese.js","containers/pages/numbers/index.js","containers/app/routes.js","containers/pages/home.js","containers/pages/not-found.js","presenters/atoms/logo/index.js","presenters/atoms/nav/index.js","presenters/molecules/header/index.js","containers/app/index.js","index.js"],"names":["RenderRoute","props","routes","map","route","i","key","path","render","component","isStr","val","isArr","Array","isArray","isPOJO","x","Object","isFunc","isSymbol","getPrototypeOf","prototype","randomInt","min","max","Math","round","random","shuffle","xs","ys","slice","currentIndex","length","randomIndex","temporaryValue","floor","VOCAB_URL","shuffleData","compose","assoc","Infinity","isValidData","data","some","d","word","english","getInitialData","hsk","mods","base","category","a","div1000","div100","div10x","div10","pattern_thousands","pattern_21_99","pattern_tens","pattern_0_10","s","div10x0","div10xx","pattern_hundreds","pattern_101_999","pattern_10_19","getSemiRandomInt","spec","weights","reduce","acc","concat","weight","fill","weightedRandomInt","answerRef","useRef","useState","setData","state","setState","useEffect","fetch","response","text","jsonStr","json","JSON","parse","Error","console","log","f","answers","setAnswers","question","setQuestion","nextQuestion","next","current","setTimeout","focus","fn","e","preventDefault","keyCode","nextAction","window","addEventListener","removeEventListener","correct","value","trim","checkAnswer","className","join","ref","type","onClick","pinyin1","p","filter","getPercentageCorrect","name","n","abs","replace","RegExp","arabic2chinese","attempt","int","match","isExact","Logo","alt","src","Nav","isOpen","setOpen","renderRoutes","indent","to","find","y","isNotFound","sortRoutes","Header","App","basename","pkg","homepage","ReactDOM","StrictMode","document","getElementById"],"mappings":"84bAGe,SAASA,EAAYC,GAClC,OACE,kBAAC,IAAD,KACGA,EAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChB,kBAAC,IAAD,CACEC,IAAKD,EACLE,KAAMH,EAAMG,KACZC,OAAQ,SAACP,GAAD,OACN,kBAACG,EAAMK,UAAP,iBAAqBR,EAArB,CAA4BC,OAAQE,EAAMF,iB,wFC+B/C,SAASQ,EAAMC,GACpB,MAAsB,kBAARA,EAKT,SAASC,EAAMD,GACpB,OAAOE,MAAMC,QAAQH,GAYhB,SAASI,EAAOC,GACrB,OAPoBL,EAOPK,KANEC,OAAON,KAASC,EAAMD,KAWhC,SAAgBA,GACrB,MAAsB,oBAARA,EAZgCO,CAAOP,KAiBhD,SAAkBA,GACvB,MAAsB,kBAARA,EAlBgDQ,CAASR,IAMpDM,OAAOG,eAAeJ,KAAOC,OAAOI,UAPlD,IAAeV,ECvDf,SAASW,EAAUC,EAAKC,GAC7B,OAAOD,EAAME,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IA4B1C,SAASK,EAAQC,GAOtB,IANA,IAAMC,EAAKD,EAAGE,QAEVC,EAAeF,EAAGG,OAClBC,EAAc,KACdC,EAAiB,KAEd,IAAMH,GACXE,EAAcT,KAAKW,MAAMX,KAAKE,SAAWK,GAGzCG,EAAiBL,EAFjBE,GAAgB,GAGhBF,EAAGE,GAAgBF,EAAGI,GACtBJ,EAAGI,GAAeC,EAGpB,OAAOL,E,UClCHO,EAAS,6GAEFC,EAAcC,YACzBX,EACAzB,YAAIqC,YAAM,UAAW,OACrBT,YAAM,EAAGU,MAGEC,EAAc,SAACC,GAC1B,QAAK/B,EAAM+B,KACHA,EAAKC,MAAK,SAACC,GACjB,OAAK9B,EAAO8B,MACPnC,EAAMmC,EAAEC,SACRlC,EAAMiC,EAAEE,WACLF,EAAEE,QAAQH,KAAKlC,S,YCbdsC,G,MAAiB,kBAC5BT,YAAQX,EAASzB,YAAIqC,YAAM,UAAW,OAAQT,YAAM,EAAGU,KAAvDF,CAAkEU,KCbpE,IAAMC,EACC,SADDA,EAEC,SAFDA,EAGC,SAHDA,EAIC,SAJDA,EAKC,SAYDC,EAAO,CACX,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAsCF,SAASC,EAASC,GAChB,IAAMC,EAAU,SAACtC,GAAD,OAAOA,EAAI,MAAS,GAI9BuC,EAAS,SAACvC,GAAD,OAAOA,EAAI,MAAQ,GAC5BwC,EAAS,SAACxC,GAAD,OAAOuC,EAAOvC,EAAKA,EAAI,KAChCyC,EAAQ,SAACzC,GAAD,OAAOA,EAAI,KAAO,GAE1B0C,EAAoB,SAAC1C,GAAD,OAAOmC,EAAKnC,EAAI,KAAQkC,GAG5CS,EAAgB,SAAC3C,GAAD,OACpBmC,EAAK1B,KAAKW,MAAMpB,EAAI,KAAOkC,EAAYC,EAAKnC,EAAyB,GAArBS,KAAKW,MAAMpB,EAAI,MAC3D4C,EAAe,SAAC5C,GAAD,OAAOmC,EAAKnC,EAAI,IAAMkC,GAErCW,EAAe,SAAC7C,GAAD,OAAOmC,EAAKnC,IAE7B8C,EAAI,GAiFR,OA9EIT,GAAK,KAAQA,GAAK,MAAQC,EAAQD,KACpCS,GAAKJ,EAAkBL,IAIrBA,GAAK,KAAQA,GAAK,OAASC,EAAQD,KACrCS,GAAKJ,EAAkBL,EAAKA,EAAI,KAGpBA,EA5Ba,IAAO,IA6B9BS,GAAKX,EAAK,GACVW,GAAKD,EAAaR,EAAI,OA7BV,SAACrC,GAAD,OAAOsC,EAAQtC,EAAKA,EAAI,MAASyC,EAAMzC,EAAI,IAiChD+C,CAAQV,IAhCH,SAACrC,GAAD,OAAOsC,EAAQtC,EAAKA,EAAI,OAAUyC,EAAMzC,EAAI,IAsCjDgD,CAAQX,GAOfA,GAA4B,IAAvB5B,KAAKW,MAAMiB,EAAI,MANpBS,GAAKX,EAAK,GACVW,GAAKH,EAAcN,EAAI,OAPvBS,GAAKX,EAAK,GACVW,GAAKF,EAAaP,EAAI,OAgBtBA,GAAK,KAAOA,GAAK,KAAOE,EAAOF,KACjCS,GA5CuB,SAAC9C,GAAD,OAAOmC,EAAKnC,EAAI,KAAOkC,EA4CzCe,CAAiBZ,IAIpBA,GAAK,KAAOA,GAAK,MAAQE,EAAOF,KAClCS,GAlDsB,SAAC9C,GAAD,OAAOmC,EAAK1B,KAAKW,MAAMpB,EAAI,MAAQkC,EAkDpDgB,CAAgBb,GAGhBE,EAAOF,KAAMI,EAAMJ,IAAOG,EAAOH,KACpCS,GAAKF,EAAaP,EAA0B,IAAtB5B,KAAKW,MAAMiB,EAAI,OAIlCE,EAAOF,IAAOI,EAAMJ,KAAMG,EAAOH,KACpCS,GAAKX,EAAK,GACVW,GAAKD,EAAaR,EAA0B,IAAtB5B,KAAKW,MAAMiB,EAAI,OAIlCE,EAAOF,IAAOI,EAAMJ,IAAOG,EAAOH,KACrCS,GAAKH,EAAcN,EAA0B,IAAtB5B,KAAKW,MAAMiB,EAAI,QAKtCA,GAAK,IAAMA,GAAK,IAAMI,EAAMJ,KAC9BS,GAAKF,EAAaP,IAIhBA,GAAK,IAAMA,GAAK,KAAOI,EAAMJ,KAC/BS,GAAKH,EAAcN,IAIjBA,GAAK,IAAMA,GAAK,KAClBS,GA5EoB,SAAC9C,GAAD,OAAOkC,EAAYC,EAAKnC,EAAI,IA4E3CmD,CAAcd,IAIjBA,GAAK,GAAKA,GAAK,KACjBS,GAAKD,EAAaR,IAGbS,E,UCzJHM,EAAmB,kBJElB,SAA2BC,GAChC,IAAMC,EAAUD,EAAKE,QACnB,SAACC,EAAKxD,EAAGX,GAAT,OAAemE,EAAIC,OAAO5D,MAAMG,EAAE0D,QAAQC,KAAKtE,MAC/C,IAHoC,EAMjBgE,EAAKC,EADbhD,EAAU,EAAGgD,EAAQrC,OAAS,KAE3C,OAAOX,EAP+B,EAM9BC,IAN8B,EAMzBC,KIPboD,CAAkB,CAChB,CAAEF,OAAQ,EAAanD,IAAK,EAAGC,IAAK,IACpC,CAAEkD,OAAQ,EAAanD,IAAK,EAAGC,IALP,MAMxB,CAAEkD,OAAQ,EAAanD,KANC,KAM0BC,KAAM,MCT7C,OACb,CACEjB,KAAM,SACNE,UJwBW,WACb,IAAMoE,EAAYC,iBAAO,MADS,EAKVC,mBAAS,MALC,mBAK3BpC,EAL2B,KAKrBqC,EALqB,OAMRD,mBAAS,WAND,mBAM3BE,EAN2B,KAMpBC,EANoB,KAQlCC,qBAAU,WAAM,4CACd,gCAAA9B,EAAA,+EAE2B+B,MAAM/C,GAFjC,cAEUgD,EAFV,gBAG0BA,EAASC,OAHnC,UAGUC,EAHV,OAIUC,EAAOC,KAAKC,MAAMH,GACnB7C,EAAY8C,GALrB,uBAKkC,IAAIG,MAAM,yBAL5C,QAMIX,EAAQQ,GACRN,EAAS,SAPb,kDASIU,QAAQC,IAAR,MACAb,EAAQ,EAAD,IACPE,EAAS,SAXb,2DADc,uBAAC,WAAD,wBAedY,KACC,IAxB+B,MA0BJf,mBAAS,MA1BL,mBA0B3BgB,EA1B2B,KA0BlBC,EA1BkB,OAqCFjB,mBAAS,GArCP,mBAqC3BkB,EArC2B,KAqCjBC,EArCiB,KAsC5BC,EAAe,WACnB,IAAMC,EAAOH,EAAW,EACpBG,GAAQL,EAAQ9D,OAClBiD,EAAS,SAETgB,EAAYE,GACZlB,EAAS,cAIbC,qBAAU,WACJN,EAAUwB,SACZC,YAAW,kBAAMzB,EAAUwB,QAAQE,UA3ElB,OA8ErBpB,qBAAU,WACR,IAAMqB,EAAK,SAACC,GACVA,EAAEC,iBA/EU,KAgFRD,EAAEE,SAAuBC,KAG/B,OADAC,OAAOC,iBAAiB,QAASN,GAC1B,kBAAMK,OAAOE,oBAAoB,QAASP,OAGnD,IAAII,EAAa,kBAAM,GACvB,OAAQ3B,GACN,IAAK,WAEH,OADA2B,EAAa,kBAtCG,WAClB,IAAM9D,EAAOiD,EAAQE,GACfe,EAAUnC,EAAUwB,QAAQY,MAAMC,SAAWpE,EAAKA,KAExDoC,EAAS8B,EAAU,UAAY,aAE/BlE,EAAKkE,QAAUA,EACfhB,EAAWD,GA+BUoB,IAEjB,6BAASC,UAAU,mCACjB,uBAAGA,UAAU,0BAAb,wBACA,uBAAGA,UAAU,mBACVrB,EAAQE,GAAUlD,QAAQsE,KAAK,OAElC,2BAAOC,IAAKzC,EAAWuC,UAAU,iBAAiBG,KAAK,SACvD,4BAAQH,UAAU,YAAYI,QAASZ,GAAvC,UAMN,IAAK,UAEH,OADAA,EAAa,kBAAMT,KAEjB,6BAASiB,UAAU,mCACjB,uBAAGA,UAAU,qBAAb,YACA,4BAAQA,UAAU,YAAYI,QAASZ,GAAvC,aAMN,IAAK,YAEH,OADAA,EAAa,kBAAMT,KAEjB,6BAASiB,UAAU,mCACjB,uBAAGA,UAAU,qBAAb,cACCrB,EAAQA,EAAQ9D,OAAS,IACxB,uBAAGmF,UAAU,0BAAb,mBACmBrB,EAAQE,GAAUnD,KADrC,KAEGiD,EAAQE,GAAUwB,QAFrB,KAKF,4BAAQL,UAAU,YAAYI,QAASZ,GAAvC,aAMN,IAAK,OAMH,OALAA,EAAa,WACXZ,EAAW1D,EAAYK,IACvBuD,EAAY,GACZhB,EAAS,aAGT,6BAASkC,UAAU,mCACjB,uBAAGA,UAAU,qBAAb,YAxH0B,SAACrB,GACnC,IAAM2B,EAAIC,aAAO,SAAC3G,GAAD,OAAqB,IAAdA,EAAEgG,UAAkBjB,GAAS9D,OAAS8D,EAAQ9D,OACtE,OAAOR,KAAKC,MAAU,IAAJgG,GAAa,IAuHXE,CAAqB7B,GADjC,KAGA,4BAAQqB,UAAU,YAAYI,QAASZ,GAAvC,YAMN,IAAK,UACH,OACE,6BAASQ,UAAU,mCACjB,uBAAGA,UAAU,0BAAb,eAIN,IAAK,QACH,OACE,6BAASA,UAAU,sDACjB,uBAAGA,UAAU,0BAAb,mCAMN,QACA,IAAK,QAKH,OAJAR,EAAa,WACXZ,EAAW1D,EAAYK,IACvBuC,EAAS,aAGT,6BAASkC,UAAU,mCACjB,uBAAGA,UAAU,0BAAb,4CASA,4BAAQA,UAAU,YAAYI,QAASZ,GAAvC,YIpLNiB,KAAM,eAGR,CACEtH,KAAM,OACNE,UHIW,WACb,IA0CImG,EA1CE/B,EAAYC,iBAAO,MADO,EAKNC,mBAAS,SALH,mBAKzBE,EALyB,KAKlBC,EALkB,OAOFH,mBAAS/B,KAPP,mBAOzB+C,EAPyB,KAOhBC,EAPgB,OAkBAjB,mBAAS,GAlBT,mBAkBzBkB,EAlByB,KAkBfC,EAlBe,KAmB1BC,EAAe,WACnB,IAAMC,EAAOH,EAAW,EACpBG,GAAQL,EAAQ9D,OAClBiD,EAAS,SAETgB,EAAYE,GACZlB,EAAS,cAmBb,OAfAC,qBAAU,WACJN,EAAUwB,SACZC,YAAW,kBAAMzB,EAAUwB,QAAQE,UA1ClB,OA6CrBpB,qBAAU,WACR,IAAMqB,EAAK,SAACC,GACVA,EAAEC,iBA9CU,KA+CRD,EAAEE,SAAuBC,KAG/B,OADAC,OAAOC,iBAAiB,QAASN,GAC1B,kBAAMK,OAAOE,oBAAoB,QAASP,OAI3CvB,GACN,IAAK,WAEH,OADA2B,EAAa,kBAtCG,WAClB,IAAM9D,EAAOiD,EAAQE,GACfe,EAAUnC,EAAUwB,QAAQY,MAAMC,SAAWpE,EAAKA,KAExDoC,EAAS8B,EAAU,UAAY,aAE/BlE,EAAKkE,QAAUA,EACfhB,EAAWD,GA+BUoB,IAEjB,6BAASC,UAAU,iCACjB,uBAAGA,UAAU,0BAAb,wBACA,uBAAGA,UAAU,mBACVrB,EAAQE,GAAUlD,QAAQsE,KAAK,OAElC,2BAAOC,IAAKzC,EAAWuC,UAAU,iBAAiBG,KAAK,SACvD,4BAAQH,UAAU,YAAYI,QAASZ,GAAvC,UAMN,IAAK,UAEH,OADAA,EAAa,kBAAMT,KAEjB,6BAASiB,UAAU,kDACjB,uBAAGA,UAAU,qBAAb,YACA,4BAAQA,UAAU,YAAYI,QAASZ,GAAvC,aAMN,IAAK,YAEH,OADAA,EAAa,kBAAMT,KAEjB,6BAASiB,UAAU,oDACjB,uBAAGA,UAAU,qBAAb,cACCrB,EAAQA,EAAQ9D,OAAS,IACxB,uBAAGmF,UAAU,0BAAb,mBACmBrB,EAAQE,GAAUnD,KADrC,KAEGiD,EAAQE,GAAUwB,QAFrB,KAKF,4BAAQL,UAAU,YAAYI,QAASZ,GAAvC,aAMN,IAAK,OAMH,OALAA,EAAa,WACXZ,EAAWhD,KACXkD,EAAY,GACZhB,EAAS,aAGT,6BAASkC,UAAU,kDACjB,uBAAGA,UAAU,qBAAb,YArG0B,SAACrB,GACnC,IAAM2B,EAAIC,aAAO,SAAC3G,GAAD,OAAqB,IAAdA,EAAEgG,UAAkBjB,GAAS9D,OAAS8D,EAAQ9D,OACtE,OAAOR,KAAKC,MAAU,IAAJgG,GAAa,IAoGXE,CAAqB7B,GADjC,KAGA,4BAAQqB,UAAU,YAAYI,QAASZ,GAAvC,YAMN,QACA,IAAK,QAEH,OADAA,EAAa,kBAAM1B,EAAS,aAE1B,6BAASkC,UAAU,iCACjB,uBAAGA,UAAU,0BAAb,mCAGA,4BAAQA,UAAU,YAAYI,QAASZ,GAAvC,YGpHNiB,KAAM,aAGR,CACEtH,KAAM,WACNE,UDHW,WACb,IA6BImG,EA7BE/B,EAAYC,iBAAO,MADO,EAKNC,mBAAS,SALH,mBAKzBE,EALyB,KAKlBC,EALkB,OAOFH,mBAAS,IAPP,mBAOzBgB,EAPyB,KAOhBC,EAPgB,KAS1BmB,EAAc,SAACW,GACnB,IAFiBzE,EAEX2D,EDEK,SAAwB3D,GACrC,IAAIS,EAAI,GA+BR,OA7BIT,EAAI,IACNS,GAAKZ,EACLG,EAAI5B,KAAKsG,IAAI1E,IAIXA,GAAK,KAAOA,GAAK,WAEnBS,GAAKV,GADMC,EAAKA,EAAI,KAAQ,KAE5BS,GAAKZ,GAGLG,GAAQ,KACA,MACNS,GAAKX,EAAK,MAQdW,GAHAA,GAAKV,EAASC,IAGR2E,QAAQ,IAAIC,OAAO9E,EAAK,GAAK,QAAS,KAAMA,EAAK,KAGjDlB,OAAS,IACb6B,EAAIA,EAAEkE,QAAQ,IAAIC,OAAO9E,EAAK,GAAK,MAAO,KAGrCW,EClCWoE,CAAeJ,GACzBK,EAAUtD,EAAUwB,QAAQY,MAAMC,OACxChC,EAASiD,IAAYnB,EAAU,UAAY,aAJ1B3D,EAKP,CAAEyE,IAAGK,UAASnB,WALDhB,EAAWD,EAAQtB,OAAOpB,KAuBnD,OAfA8B,qBAAU,WACJN,EAAUwB,SACZC,YAAW,kBAAMzB,EAAUwB,QAAQE,UA7BlB,OAgCrBpB,qBAAU,WACR,IAAMqB,EAAK,SAACC,GACVA,EAAEC,iBAjCU,KAkCRD,EAAEE,SAAuBC,KAG/B,OADAC,OAAOC,iBAAiB,QAASN,GAC1B,kBAAMK,OAAOE,oBAAoB,QAASP,OAI3CvB,GACN,IAAK,WACH,IAAMmD,EAAMhE,IAEZ,OADAwC,EAAa,kBAAMO,EAAYiB,IAE7B,6BAAShB,UAAU,qCACjB,uBAAGA,UAAU,0BAAb,wBACA,uBAAGA,UAAU,mBAAmBgB,GAChC,2BAAOd,IAAKzC,EAAWuC,UAAU,iBAAiBG,KAAK,SACvD,4BAAQH,UAAU,YAAYI,QAASZ,GAAvC,UAMN,IAAK,UAEH,OADAA,EAAa,kBAAM1B,EAAS,aAE1B,6BAASkC,UAAU,sDACjB,uBAAGA,UAAU,qBAAb,YACA,4BAAQA,UAAU,YAAYI,QAASZ,GAAvC,aAMN,IAAK,YAEH,OADAA,EAAa,kBAAM1B,EAAS,aAE1B,6BAASkC,UAAU,wDACjB,uBAAGA,UAAU,qBAAb,cACCrB,EAAQA,EAAQ9D,OAAS,IACxB,uBAAGmF,UAAU,0BAAb,mBACmBrB,EAAQA,EAAQ9D,OAAS,GAAG+E,SAGjD,4BAAQI,UAAU,YAAYI,QAASZ,GAAvC,aAMN,QACA,IAAK,QAEH,OADAA,EAAa,kBAAM1B,EAAS,aAE1B,6BAASkC,UAAU,qCACjB,uBAAGA,UAAU,0BAAb,uCAGA,4BAAQA,UAAU,YAAYI,QAASZ,GAAvC,YC7ENiB,KAAM,iBAGR,CACEtH,KAAM,IACNE,UAAW,SAACR,GAAD,OAAYA,EAAMoI,MAAMC,QCzB9B,qCCAA,+CF0BLT,KAAM,S,MGdKU,MAXf,WACE,OACE,4BAAQnB,UAAU,QAChB,yBAAKA,UAAU,YAAYoB,IAAI,2BAAOC,IAAI,0BAC1C,wBAAIrB,UAAU,eACZ,0CADF,IACwB,4C,sBCOf,SAASsB,EAAT,GAA0B,IAAXxI,EAAU,EAAVA,OAAU,EACZ6E,oBAAS,GADG,mBAC/B4D,EAD+B,KACvBC,EADuB,KAiBtC,OAAKD,EAYH,yBAAKvB,UAAU,OACb,4BACEA,UAAU,iCACVI,QAAS,kBAAMoB,GAAQ,MAEzB,yBAAKxB,UAAU,aA9BE,SAAfyB,EAAgB3I,GAAD,IAAS4I,EAAT,uDAAkB,EAAlB,OACnB,wBAAI1B,UAAS,2BAAsB0B,IAChC5I,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CAAM0I,GAAI3I,EAAMG,KAAMiH,QAAS,kBAAMoB,GAAQ,KAC1CxI,EAAMyH,MAERzH,EAAMF,QAAU2I,EAAazI,EAAMF,OAAQ4I,EAAS,QAuB7BD,CA1C3B,SAAoB3I,GACzB,IAEMc,EAAIgI,aAFO,SAAChI,GAAD,MAAkB,MAAXA,EAAET,OAEDL,GACnB2B,EAAK8F,aAAO,SAACsB,GAAD,OAAOA,IAAMjI,GAFZ,SAACA,GAAD,OAAOA,EAAET,KAEQ2I,CAAWD,KAAI/I,GACnD,OAAOuE,YAAO,CAACzD,GAAIa,GAqC0BsH,CAAWjJ,MAfpD,yBAAKkH,UAAU,OACb,4BACEA,UAAU,gCACVI,QAAS,kBAAMoB,GAAQ,OC/BlB,SAASQ,EAAT,GAA6B,IAAXlJ,EAAU,EAAVA,OAC/B,OACE,oCACE,kBAAC,IAAD,CAAM6I,GAAI,IAAK3B,UAAU,gBACvB,kBAAC,EAAD,OAEF,kBAACsB,EAAD,CAAKxI,OAAQA,K,MCFJ,SAASmJ,IACtB,OACE,kBAAC,IAAD,CAAQC,SAAUC,EAAIC,UACpB,yBAAKpC,UAAU,qBACb,4BAAQA,UAAU,kBAChB,kBAACgC,EAAD,CAAQlJ,OAAQA,KAElB,0BAAMkH,UAAU,gBACd,kBAACpH,EAAD,CAAaE,OAAQA,OCd/BuJ,IAASjJ,OACP,kBAAC,IAAMkJ,WAAP,KACE,kBAACL,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.8348d029.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nexport default function RenderRoute(props) {\n  return (\n    <Switch>\n      {props.routes.map((route, i) => (\n        <Route\n          key={i}\n          path={route.path}\n          render={(props) => (\n            <route.component {...props} routes={route.routes} />\n          )}\n        />\n      ))}\n    </Switch>\n  )\n}\n","/**\n */\nexport function isDef(x) {\n  return !isUndef(x) && !isNull(x)\n}\n\n/**\n * Does not match: `null`\n */\nexport function isUndef(val) {\n  return typeof val === 'undefined'\n}\n\n/**\n * Does not match: `undefined`\n */\nexport function isNull(val) {\n  return val === null\n}\n\n/**\n */\nexport function isBool(val) {\n  return typeof val === 'boolean'\n}\n\n/**\n * Does not match: `NaN`, `Infinity`, `-Infinity`\n */\nexport function isNum(val) {\n  return typeof val === 'number' && isFinite(val)\n}\n\n/**\n * Does not match: `NaN`, `Infinity`, `-Infinity`\n */\nexport function isInt(val) {\n  return typeof val === 'number' && isFinite(val) && Math.floor(val) === val\n}\n\n/**\n */\nexport function isStr(val) {\n  return typeof val === 'string'\n}\n\n/**\n */\nexport function isArr(val) {\n  return Array.isArray(val)\n}\n\n/**\n * Does not match: arrays, functions, symbols\n */\nexport function isObj(val) {\n  return val === Object(val) && !isArr(val) && !isFunc(val) && !isSymbol(val)\n}\n\n/**\n */\nexport function isPOJO(x) {\n  return isObj(x) && Object.getPrototypeOf(x) === Object.prototype\n}\n\n/**\n */\nexport function isFunc(val) {\n  return typeof val === 'function'\n}\n\n/**\n */\nexport function isSymbol(val) {\n  return typeof val === 'symbol'\n}\n","export function randomInt(min, max) {\n  return min + Math.round(Math.random() * (max - min))\n}\n\n/**\n * @example\n *   weightedRandomInt([\n *     { min: 0, max: 25, weight: 8 },\n *     { min: 26, max: 50, weight: 4 },\n *     { min: 51, max: 75, weight: 2 },\n *     { min: 76, max: 100, weight: 1 }\n *   ])\n * @param {Object<{ min: Number, max: Number, weight: Number }>} spec\n */\nexport function weightedRandomInt(spec) {\n  const weights = spec.reduce(\n    (acc, x, i) => acc.concat(Array(x.weight).fill(i)),\n    []\n  )\n  const rand = randomInt(0, weights.length - 1)\n  const { min, max } = spec[weights[rand]]\n  return randomInt(min, max)\n}\n\n/**\n * Fisher-Yates Shuffle: unbiased array shuffle algorithm\n * @param {Array} xs\n * @returns {Array}\n */\nexport function shuffle(xs) {\n  const ys = xs.slice()\n\n  let currentIndex = ys.length\n  let randomIndex = null\n  let temporaryValue = null\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex -= 1\n\n    temporaryValue = ys[currentIndex]\n    ys[currentIndex] = ys[randomIndex]\n    ys[randomIndex] = temporaryValue\n  }\n\n  return ys\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { compose, map, filter, slice, assoc } from 'ramda'\n// import useVisualViewport from '../../../hooks/viewport'\n\nimport { isPOJO, isArr, isStr } from '../../../utils/type-checks'\nimport { shuffle } from '../../../utils/random'\n\nimport './index.scss'\n\nconst FOCUS_DELAY_MS = 50\nconst ENTER_KEY = 13\nconst VOCAB_URL = `https://gist.githubusercontent.com/branneman/20d2b2cc1e234c4b664f1cf3962082e7/raw/zhongwen-vocab-bran.json`\n\nexport const shuffleData = compose(\n  shuffle,\n  map(assoc('correct', null)),\n  slice(0, Infinity)\n)\n\nexport const isValidData = (data) => {\n  if (!isArr(data)) return false\n  return !data.some((d) => {\n    if (!isPOJO(d)) return true\n    if (!isStr(d.word)) return true\n    if (!isArr(d.english)) return true\n    return !d.english.some(isStr)\n  })\n}\n\nexport const getPercentageCorrect = (answers) => {\n  const p = filter((x) => x.correct === true, answers).length / answers.length\n  return Math.round(p * 10000) / 100 // Safely round to 2 decimals\n}\n\nexport default function VocabPage() {\n  const answerRef = useRef(null)\n\n  // const visualViewport = useVisualViewport()\n\n  const [data, setData] = useState(null)\n  const [state, setState] = useState('loading')\n\n  useEffect(() => {\n    async function f() {\n      try {\n        const response = await fetch(VOCAB_URL)\n        const jsonStr = await response.text()\n        const json = JSON.parse(jsonStr)\n        if (!isValidData(json)) throw new Error('Error: JSON not valid')\n        setData(json)\n        setState('start')\n      } catch (err) {\n        console.log(err)\n        setData(err)\n        setState('error')\n      }\n    }\n    f()\n  }, [])\n\n  const [answers, setAnswers] = useState(null)\n  const checkAnswer = () => {\n    const word = answers[question]\n    const correct = answerRef.current.value.trim() === word.word\n\n    setState(correct ? 'correct' : 'incorrect')\n\n    word.correct = correct\n    setAnswers(answers)\n  }\n\n  const [question, setQuestion] = useState(0)\n  const nextQuestion = () => {\n    const next = question + 1\n    if (next >= answers.length) {\n      setState('done')\n    } else {\n      setQuestion(next)\n      setState('question')\n    }\n  }\n\n  useEffect(() => {\n    if (answerRef.current)\n      setTimeout(() => answerRef.current.focus(), FOCUS_DELAY_MS)\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction = () => 0\n  switch (state) {\n    case 'question':\n      nextAction = () => checkAnswer()\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-description\">Translate to Chinese</p>\n          <p className=\"assignment-text\">\n            {answers[question].english.join(', ')}\n          </p>\n          <input ref={answerRef} className=\"practice-input\" type=\"text\" />\n          <button className=\"cta--next\" onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => nextQuestion()\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-result\">Correct!</p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => nextQuestion()\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-result\">Incorrect!</p>\n          {answers[answers.length - 1] && (\n            <p className=\"assignment-description\">\n              Correct answer: {answers[question].word} (\n              {answers[question].pinyin1})\n            </p>\n          )}\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'done':\n      nextAction = () => {\n        setAnswers(shuffleData(data))\n        setQuestion(0)\n        setState('question')\n      }\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-result\">\n            Correct: {getPercentageCorrect(answers)}%\n          </p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Restart\n          </button>\n        </section>\n      )\n\n    case 'loading':\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-description\">Loading...</p>\n        </section>\n      )\n\n    case 'error':\n      return (\n        <section className=\"section section--incorrect section--vocab-practice\">\n          <p className=\"assignment-description\">\n            Error while loading vocab JSON\n          </p>\n        </section>\n      )\n\n    default:\n    case 'start':\n      nextAction = () => {\n        setAnswers(shuffleData(data))\n        setState('question')\n      }\n      return (\n        <section className=\"section section--vocab-practice\">\n          <p className=\"assignment-description\">\n            Translate personal vocabulary to Chinese\n          </p>\n          {/* <input\n            ref={vocabRef}\n            className=\"practice-input\"\n            type=\"text\"\n            value={VOCAB_URL}\n          /> */}\n          <button className=\"cta--next\" onClick={nextAction}>\n            Start\n          </button>\n        </section>\n      )\n  }\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { compose, map, filter, slice, assoc } from 'ramda'\n// import useVisualViewport from '../../../hooks/viewport'\n\nimport hsk from '../../../data/hsk.json'\nimport { shuffle } from '../../../utils/random'\n\nimport './index.scss'\n\nconst FOCUS_DELAY_MS = 50\nconst ENTER_KEY = 13\n\nexport const getInitialData = () =>\n  compose(shuffle, map(assoc('correct', null)), slice(0, Infinity))(hsk)\n\nexport const getPercentageCorrect = (answers) => {\n  const p = filter((x) => x.correct === true, answers).length / answers.length\n  return Math.round(p * 10000) / 100 // Safely round to 2 decimals\n}\n\nexport default function HskPage() {\n  const answerRef = useRef(null)\n\n  // const visualViewport = useVisualViewport()\n\n  const [state, setState] = useState('start')\n\n  const [answers, setAnswers] = useState(getInitialData())\n  const checkAnswer = () => {\n    const word = answers[question]\n    const correct = answerRef.current.value.trim() === word.word\n\n    setState(correct ? 'correct' : 'incorrect')\n\n    word.correct = correct\n    setAnswers(answers)\n  }\n\n  const [question, setQuestion] = useState(0)\n  const nextQuestion = () => {\n    const next = question + 1\n    if (next >= answers.length) {\n      setState('done')\n    } else {\n      setQuestion(next)\n      setState('question')\n    }\n  }\n\n  useEffect(() => {\n    if (answerRef.current)\n      setTimeout(() => answerRef.current.focus(), FOCUS_DELAY_MS)\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction\n  switch (state) {\n    case 'question':\n      nextAction = () => checkAnswer()\n      return (\n        <section className=\"section section--hsk-practice\">\n          <p className=\"assignment-description\">Translate to Chinese</p>\n          <p className=\"assignment-text\">\n            {answers[question].english.join(', ')}\n          </p>\n          <input ref={answerRef} className=\"practice-input\" type=\"text\" />\n          <button className=\"cta--next\" onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => nextQuestion()\n      return (\n        <section className=\"section section--correct section--hsk-practice\">\n          <p className=\"assignment-result\">Correct!</p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => nextQuestion()\n      return (\n        <section className=\"section section--incorrect section--hsk-practice\">\n          <p className=\"assignment-result\">Incorrect!</p>\n          {answers[answers.length - 1] && (\n            <p className=\"assignment-description\">\n              Correct answer: {answers[question].word} (\n              {answers[question].pinyin1})\n            </p>\n          )}\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'done':\n      nextAction = () => {\n        setAnswers(getInitialData())\n        setQuestion(0)\n        setState('question')\n      }\n      return (\n        <section className=\"section section--correct section--hsk-practice\">\n          <p className=\"assignment-result\">\n            Correct: {getPercentageCorrect(answers)}%\n          </p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Restart\n          </button>\n        </section>\n      )\n\n    default:\n    case 'start':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--hsk-practice\">\n          <p className=\"assignment-description\">\n            Translate HSK1 words to Chinese\n          </p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Start\n          </button>\n        </section>\n      )\n  }\n}\n","const mods = {\n  neg: '负', // fù\n  1e1: '十', // shí\n  1e2: '百', // bǎi\n  1e3: '千', // qiān\n  1e4: '万', // wàn\n  1e8: '亿', // yì\n  1e12: '兆', // zhào\n  1e16: '京', // jīng\n  1e20: '垓', // gāi\n  1e24: '秭', // zǐ\n  1e28: '穰', // ráng\n  1e32: '沟', // gōu\n  1e36: '涧', // jiàn\n  1e40: '正', // zhēng\n  1e44: '载', // zài\n}\nconst base = [\n  '零', // líng\n  '一', // yī\n  '二', // èr\n  '三', // sān\n  '四', // sì\n  '五', // wǔ\n  '六', // liù\n  '七', // qī\n  '八', // bā\n  '九', // jiǔ\n  '十', // shí\n]\n\nexport default function arabic2chinese(a) {\n  let s = ''\n\n  if (a < 0) {\n    s += mods.neg\n    a = Math.abs(a)\n  }\n\n  // 1e4-1e8 category patterns\n  if (a >= 1e4 && a <= 1e8 - 1) {\n    const _ = (a - (a % 1e4)) / 1e4\n    s += category(_)\n    s += mods[1e4]\n\n    // dispatch to < 1e4 patterns\n    a = a % 1e4\n    if (a < 1e3) {\n      s += base[0]\n    }\n  }\n\n  // < 1e4 category patterns\n  s += category(a)\n\n  // More than one zero in a row becomes a single zero\n  s = s.replace(new RegExp(base[0] + '{2,3}', 'g'), base[0])\n\n  // Trailing zero's\n  if (s.length > 1) {\n    s = s.replace(new RegExp(base[0] + '+$'), '')\n  }\n\n  return s\n}\n\nfunction category(a) {\n  const div1000 = (x) => x % 1000 === 0\n  const div100x = (x) => x % 1000 < 10\n  const div10x0 = (x) => div1000(x - (x % 100)) && div10(x % 10)\n  const div10xx = (x) => div1000(x - (x % 100)) && !div10(x % 10)\n  const div100 = (x) => x % 100 === 0\n  const div10x = (x) => div100(x - (x % 10))\n  const div10 = (x) => x % 10 === 0\n\n  const pattern_thousands = (x) => base[x / 1000] + mods[1e3]\n  const pattern_101_999 = (x) => base[Math.floor(x / 100)] + mods[1e2]\n  const pattern_hundreds = (x) => base[x / 100] + mods[1e2]\n  const pattern_21_99 = (x) =>\n    base[Math.floor(x / 10)] + mods[1e1] + base[x - Math.floor(x / 10) * 10]\n  const pattern_tens = (x) => base[x / 10] + mods[1e1]\n  const pattern_10_19 = (x) => mods[1e1] + base[x - 10]\n  const pattern_0_10 = (x) => base[x]\n\n  let s = ''\n\n  // thousands pattern: 1000 = 1+1000\n  if (a >= 1000 && a <= 9999 && div1000(a)) {\n    s += pattern_thousands(a)\n  }\n\n  // 1001-9999 pattern: 1234 = 1+1000+2+100+3+10+4\n  if (a >= 1000 && a <= 9999 && !div1000(a)) {\n    s += pattern_thousands(a - (a % 1000))\n\n    // [1001] with zero's in the hundreds and tens place: 1001 = 1+1000+0+1\n    if (div100x(a)) {\n      s += base[0]\n      s += pattern_0_10(a % 100)\n    }\n\n    // [1010] with zero's in the hundreds and ones place: 1010 = 1+1000+0+1+10\n    else if (div10x0(a)) {\n      s += base[0]\n      s += pattern_tens(a % 100) // a = [1234 -> 34]\n    }\n\n    // [1011] with a zero in the hundreds place: 1011 = 1+1000+0+1+10+1\n    else if (div10xx(a)) {\n      s += base[0]\n      s += pattern_21_99(a % 100) // a = [1234 -> 34]\n    }\n\n    // dispatch to < 1000 patterns\n    else {\n      a -= Math.floor(a / 1000) * 1000\n    }\n  }\n\n  // hundreds pattern: 100 = 1+100\n  if (a >= 100 && a <= 999 && div100(a)) {\n    s += pattern_hundreds(a)\n  }\n\n  // 101-999 pattern\n  if (a >= 101 && a <= 999 && !div100(a)) {\n    s += pattern_101_999(a)\n\n    // with a zero in the ones place: 760 = 7+100+6+10\n    if (!div100(a) && div10(a) && !div10x(a)) {\n      s += pattern_tens(a - Math.floor(a / 100) * 100)\n    }\n\n    // with a zero in the tens place: 506 = 5+100+0+6\n    if (!div100(a) && !div10(a) && div10x(a)) {\n      s += base[0]\n      s += pattern_0_10(a - Math.floor(a / 100) * 100)\n    }\n\n    // generic: 135 = 1+100+3+10+5\n    if (!div100(a) && !div10(a) && !div10x(a)) {\n      s += pattern_21_99(a - Math.floor(a / 100) * 100)\n    }\n  }\n\n  // tens pattern: 30 = 3+10\n  if (a >= 20 && a <= 90 && div10(a)) {\n    s += pattern_tens(a)\n  }\n\n  // 21-99 pattern: 21 = 2+10+1\n  if (a >= 21 && a <= 99 && !div10(a)) {\n    s += pattern_21_99(a)\n  }\n\n  // 11-19 pattern: 11 = 10+1\n  if (a >= 11 && a <= 19) {\n    s += pattern_10_19(a)\n  }\n\n  // 0-10 pattern\n  if (a >= 0 && a <= 10) {\n    s += pattern_0_10(a)\n  }\n\n  return s\n}\n","import React, { useEffect, useRef, useState } from 'react'\n// import useVisualViewport from '../../../hooks/viewport'\n\nimport { weightedRandomInt } from '../../../utils/random'\nimport arabic2chinese from '../../../utils/arabic2chinese'\n\nimport './index.scss'\n\nconst FOCUS_DELAY_MS = 50\nconst ENTER_KEY = 13\nconst TEST_MAX_RANDOM_INT = 9999\n\nconst getSemiRandomInt = () =>\n  weightedRandomInt([\n    { weight: 2 /* 40% */, min: 0, max: 99 },\n    { weight: 2 /* 40% */, min: 0, max: TEST_MAX_RANDOM_INT },\n    { weight: 1 /* 20% */, min: -TEST_MAX_RANDOM_INT, max: -1 },\n  ])\n\nexport default function Numbers() {\n  const answerRef = useRef(null)\n\n  // const visualViewport = useVisualViewport()\n\n  const [state, setState] = useState('start')\n\n  const [answers, setAnswers] = useState([])\n  const addAnswer = (a) => setAnswers(answers.concat(a))\n  const checkAnswer = (n) => {\n    const correct = arabic2chinese(n)\n    const attempt = answerRef.current.value.trim()\n    setState(attempt === correct ? 'correct' : 'incorrect')\n    addAnswer({ n, attempt, correct })\n  }\n\n  useEffect(() => {\n    if (answerRef.current)\n      setTimeout(() => answerRef.current.focus(), FOCUS_DELAY_MS)\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction\n  switch (state) {\n    case 'question':\n      const int = getSemiRandomInt()\n      nextAction = () => checkAnswer(int)\n      return (\n        <section className=\"section section--numbers-practice\">\n          <p className=\"assignment-description\">Translate to Chinese</p>\n          <p className=\"assignment-text\">{int}</p>\n          <input ref={answerRef} className=\"practice-input\" type=\"text\" />\n          <button className=\"cta--next\" onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--correct section--numbers-practice\">\n          <p className=\"assignment-result\">Correct!</p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--incorrect section--numbers-practice\">\n          <p className=\"assignment-result\">Incorrect!</p>\n          {answers[answers.length - 1] && (\n            <p className=\"assignment-description\">\n              Correct answer: {answers[answers.length - 1].correct}\n            </p>\n          )}\n          <button className=\"cta--next\" onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    default:\n    case 'start':\n      nextAction = () => setState('question')\n      return (\n        <section className=\"section section--numbers-practice\">\n          <p className=\"assignment-description\">\n            Translate arabic numbers to Chinese\n          </p>\n          <button className=\"cta--next\" onClick={nextAction}>\n            Start\n          </button>\n        </section>\n      )\n  }\n}\n","import Home from '../pages/home'\nimport NotFound from '../pages/not-found'\n\nimport Vocab from '../pages/vocab'\nimport HSK from '../pages/hsk'\nimport Numbers from '../pages/numbers'\n\nexport default [\n  {\n    path: '/vocab',\n    component: Vocab,\n    name: 'Vocab: Test',\n  },\n\n  {\n    path: '/hsk',\n    component: HSK,\n    name: 'HSK: Test',\n  },\n\n  {\n    path: '/numbers',\n    component: Numbers,\n    name: 'Numbers: Test',\n  },\n\n  {\n    path: '/',\n    component: (props) => (props.match.isExact ? Home(props) : NotFound(props)),\n    name: 'Home',\n  },\n]\n","import React from 'react'\n\nexport default function Home() {\n  return <div>Home</div>\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return <div>404 Not Found</div>\n}\n","import React from 'react'\n\nimport './index.scss'\n\nfunction Logo() {\n  return (\n    <figure className=\"logo\">\n      <img className=\"logo__svg\" alt=\"练习中文\" src=\"./static/img/logo.svg\" />\n      <h1 className=\"logo__title\">\n        <span>Practice</span> <span>Chinese</span>\n      </h1>\n    </figure>\n  )\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { find, filter, concat } from 'ramda'\n\nimport './index.scss'\n\n// Sort 'Search' first, remove NotFound\nexport function sortRoutes(routes) {\n  const isSearch = (x) => x.path === '/'\n  const isNotFound = (x) => x.path\n  const x = find(isSearch, routes)\n  const xs = filter((y) => y !== x && isNotFound(y), routes)\n  return concat([x], xs)\n}\n\nexport default function Nav({ routes }) {\n  const [isOpen, setOpen] = useState(false)\n\n  // Recursively render ol>li\n  const renderRoutes = (routes, indent = 0) => (\n    <ol className={`menu menu--indent${indent}`}>\n      {routes.map((route, i) => (\n        <li key={i}>\n          <Link to={route.path} onClick={() => setOpen(false)}>\n            {route.name}\n          </Link>\n          {route.routes && renderRoutes(route.routes, indent + 1)}\n        </li>\n      ))}\n    </ol>\n  )\n\n  if (!isOpen) {\n    return (\n      <div className=\"nav\">\n        <button\n          className=\"nav__toggle nav__toggle--open\"\n          onClick={() => setOpen(true)}\n        ></button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"nav\">\n      <button\n        className=\"nav__toggle nav__toggle--close\"\n        onClick={() => setOpen(false)}\n      ></button>\n      <nav className=\"nav__menu\">{renderRoutes(sortRoutes(routes))}</nav>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Logo from '../../atoms/logo'\nimport Nav from '../../atoms/nav'\n\nexport default function Header({ routes }) {\n  return (\n    <>\n      <Link to={'/'} className=\"logo__parent\">\n        <Logo />\n      </Link>\n      <Nav routes={routes} />\n    </>\n  )\n}\n","import React from 'react'\n\nimport { HashRouter as Router } from 'react-router-dom'\nimport RenderRoute from '../../utils/render-route'\nimport pkg from '../../../package.json'\nimport routes from './routes.js'\n\nimport Header from '../../presenters/molecules/header'\n\nimport './index.scss'\n\nexport default function App() {\n  return (\n    <Router basename={pkg.homepage}>\n      <div className=\"layout__container\">\n        <header className=\"layout__header\">\n          <Header routes={routes} />\n        </header>\n        <main className=\"layout__body\">\n          <RenderRoute routes={routes} />\n        </main>\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './containers/app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}