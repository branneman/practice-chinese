{"version":3,"sources":["utils/render-route.js","utils/chinese.js","data/index.js","data/characters/index.js","data/words/index.js","data/sentences/index.js","utils/random.js","utils/type-checks.js","containers/pages/practice/read.js","utils/arabic2chinese.js","containers/pages/numbers/index.js","containers/app/routes.js","containers/pages/home.js","containers/pages/not-found.js","presenters/atoms/logo/index.js","presenters/atoms/nav/index.js","presenters/molecules/header/index.js","containers/app/index.js","index.js"],"names":["RenderRoute","props","routes","map","route","i","key","path","render","component","RE_PUNCTUATION","RE_WHITESPACE","normalise","compose","s","replace","toLower","data","radicals","characters","hsk1","words","dl","eur","sentences","fn","read","id","name","directions","list","_vocab","question","x","radical","answers","join","english","validate","a","includes","pinyin","vocabs","vocab","character","word","chinese","prop","flatten","assoc","sentence","randomInt","min","max","Math","round","random","isArr","val","Array","isArray","shuffleData","xs","ys","slice","currentIndex","length","randomIndex","temporaryValue","floor","clone","mods","base","category","div1000","div100","div10x","div10","pattern_thousands","pattern_21_99","pattern_tens","pattern_0_10","div10x0","div10xx","pattern_hundreds","pattern_101_999","pattern_10_19","getSemiRandomInt","spec","weights","reduce","acc","concat","weight","fill","weightedRandomInt","answerRef","useRef","useState","state","setState","format","setFormat","direction","setDirection","setAnswers","setQuestion","nextQuestion","next","useEffect","current","setTimeout","focus","e","preventDefault","keyCode","nextAction","window","addEventListener","removeEventListener","answer","value","correct","checkAnswer","className","ref","type","onClick","role","aria-label","results","n","filter","p","result","total","toString","percentage","toFixed","substr","getResults","toUpperCase","abs","RegExp","arabic2chinese","attempt","isEqualCharacters","int","match","isExact","Logo","alt","src","Nav","isOpen","setOpen","renderRoutes","indent","to","find","y","isNotFound","sortRoutes","Header","App","basename","pkg","homepage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b70b30b2.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nexport default function RenderRoute(props) {\n  return (\n    <Switch>\n      {props.routes.map((route, i) => (\n        <Route\n          key={i}\n          path={route.path}\n          render={(props) => (\n            <route.component {...props} routes={route.routes} />\n          )}\n        />\n      ))}\n    </Switch>\n  )\n}\n","import { compose, toLower } from 'ramda'\n\nconst RE_PUNCTUATION = /[.。,，‘’'!！?？\\-－]+/g // Both half and full-width\nconst RE_WHITESPACE = /\\s+/g\n\nconst punctuation = (s) => s.replace(RE_PUNCTUATION, '')\nconst whitespace = (s) => s.replace(RE_WHITESPACE, '')\n\nexport const normalise = compose(punctuation, whitespace, toLower)\n\nexport const isEqualCharacters = (attempt, answer) =>\n  normalise(attempt) === normalise(answer)\n","import { map, flatten, prop, assoc, join, includes } from 'ramda'\nimport { normalise } from '../utils/chinese'\n\nimport radicals from './radicals'\nimport characters from './characters'\nimport words from './words'\nimport sentences from './sentences'\n\nexport const data = {\n  radicals,\n  characters,\n  words,\n  sentences,\n}\n\nexport const fn = {\n  read: [\n    {\n      id: 'radicals',\n      name: 'Radicals',\n      directions: [\n        {\n          id: 'radical>english',\n          name: 'Radical to English',\n          list: (data, _vocab) => data.radicals,\n          question: (x) => x.radical,\n          answers: (x) => [join(', ', x.english)],\n          validate: (x, a) => includes(normalise(a), map(normalise, x.english)),\n        },\n        {\n          id: 'radical>pinyin',\n          name: 'Radical to Pinyin',\n          list: (data, _vocab) => data.radicals,\n          question: (x) => x.radical,\n          answers: (x) => [x.pinyin],\n          validate: (x, a) => normalise(x.pinyin) === normalise(a),\n        },\n      ],\n    },\n    {\n      id: 'characters',\n      name: 'Characters',\n      directions: [\n        // {\n        //   id: 'character>radical',\n        //   name: 'Character to Radical',\n        //   vocabs: ['hsk1'],\n        //   list: (data, vocab) => data.characters[vocab],\n        //   question: (x) => x.character,\n        //   answers: (x) => [x.radical],\n        //   validate: (x, a) => normalise(x.radical) === normalise(a),\n        // },\n        {\n          id: 'character>pinyin',\n          name: 'Character to Pinyin',\n          vocabs: ['hsk1'],\n          list: (data, vocab) => data.characters[vocab],\n          question: (x) => x.character,\n          answers: (x) => [x.pinyin],\n          validate: (x, a) => normalise(x.pinyin) === normalise(a),\n        },\n      ],\n    },\n    {\n      id: 'words',\n      name: 'Words',\n      directions: [\n        {\n          id: 'english>characters',\n          name: 'English to Characters',\n          vocabs: ['dl', 'eur', 'hsk1'],\n          list: (data, vocab) => data.words[vocab],\n          question: (x) => join(', ', x.english),\n          answers: (x) =>\n            map(({ word, pinyin }) => `${word} (${pinyin})`, x.chinese),\n          validate: (x, a) =>\n            includes(\n              normalise(a),\n              map(normalise, map(prop('word'), x.chinese))\n            ),\n        },\n        {\n          id: 'english>pinyin',\n          name: 'English to Pinyin',\n          vocabs: ['dl', 'eur', 'hsk1'],\n          list: (data, vocab) => data.words[vocab],\n          question: (x) => join(', ', x.english),\n          answers: (x) =>\n            map(({ word, pinyin }) => `${pinyin}（${word}）`, x.chinese),\n          validate: (x, a) =>\n            includes(\n              normalise(a),\n              map(normalise, map(prop('pinyin'), x.chinese))\n            ),\n        },\n        {\n          id: 'characters>english',\n          name: 'Characters to English',\n          vocabs: ['dl', 'eur', 'hsk1'],\n          list: (data, vocab) =>\n            flatten(\n              map(\n                (x) => map(assoc('english', x.english), x.chinese),\n                data.words[vocab]\n              )\n            ),\n          question: (x) => x.word,\n          answers: (x) => [join(', ', x.english)],\n          validate: (x, a) => includes(normalise(a), map(normalise, x.english)),\n        },\n        {\n          id: 'characters>pinyin',\n          name: 'Characters to Pinyin',\n          vocabs: ['dl', 'eur', 'hsk1'],\n          list: (data, vocab) =>\n            flatten(map(prop('chinese'), data.words[vocab])),\n          question: (x) => x.word,\n          answers: (x) => [x.pinyin],\n          validate: (x, a) => normalise(x.pinyin) === normalise(a),\n        },\n      ],\n    },\n    {\n      id: 'sentences',\n      name: 'Sentences',\n      directions: [\n        {\n          id: 'english>characters',\n          name: 'English to Characters',\n          vocabs: ['dl', 'eur'],\n          list: (data, vocab) => data.sentences[vocab],\n          question: (x) => join(', ', x.english),\n          answers: (x) =>\n            map(({ sentence, pinyin }) => `${sentence} (${pinyin})`, x.chinese),\n          validate: (x, a) =>\n            includes(\n              normalise(a),\n              map(normalise, map(prop('sentence'), x.chinese))\n            ),\n        },\n        {\n          id: 'english>pinyin',\n          name: 'English to Pinyin',\n          vocabs: ['eur'],\n          list: (data, vocab) => data.sentences[vocab],\n          question: (x) => join(', ', x.english),\n          answers: (x) =>\n            map(\n              ({ sentence, pinyin }) => `${pinyin}（${sentence}）`,\n              x.chinese\n            ),\n          validate: (x, a) =>\n            includes(\n              normalise(a),\n              map(normalise, map(prop('pinyin'), x.chinese))\n            ),\n        },\n        {\n          id: 'characters>english',\n          name: 'Characters to English',\n          vocabs: ['dl', 'eur'],\n          list: (data, vocab) => data.sentences[vocab],\n          question: (x) => join('，', map(prop('sentence'), x.chinese)),\n          answers: (x) => x.english,\n          validate: (x, a) => includes(normalise(a), map(normalise, x.english)),\n        },\n        {\n          id: 'characters>pinyin',\n          name: 'Characters to Pinyin',\n          vocabs: ['eur'],\n          list: (data, vocab) =>\n            flatten(map(prop('chinese'), data.sentences[vocab])),\n          question: (x) => x.sentence,\n          answers: (x) => [x.pinyin],\n          validate: (x, a) => normalise(x.pinyin) === normalise(a),\n        },\n        {\n          id: 'pinyin>english',\n          name: 'Pinyin to English',\n          vocabs: ['eur'],\n          list: (data, vocab) =>\n            flatten(\n              map(\n                (x) => map(assoc('english', x.english), x.chinese),\n                data.sentences[vocab]\n              )\n            ),\n          question: (x) => x.pinyin,\n          answers: (x) => x.english,\n          validate: (x, a) => includes(normalise(a), map(normalise, x.english)),\n        },\n      ],\n    },\n  ],\n}\n","import hsk1 from './hsk1'\n\nexport default {\n  hsk1,\n}\n","import dl from './dl'\nimport eur from './eur'\nimport hsk1 from './hsk1'\n\nexport default {\n  dl,\n  eur,\n  hsk1,\n}\n","import dl from './dl'\nimport eur from './eur'\n\nexport default {\n  dl,\n  eur,\n}\n","export function randomInt(min, max) {\n  return min + Math.round(Math.random() * (max - min))\n}\n\n/**\n * @example\n *   weightedRandomInt([\n *     { min: 0, max: 25, weight: 8 },\n *     { min: 26, max: 50, weight: 4 },\n *     { min: 51, max: 75, weight: 2 },\n *     { min: 76, max: 100, weight: 1 }\n *   ])\n * @param {Object<{ min: Number, max: Number, weight: Number }>} spec\n */\nexport function weightedRandomInt(spec) {\n  const weights = spec.reduce(\n    (acc, x, i) => acc.concat(Array(x.weight).fill(i)),\n    []\n  )\n  const rand = randomInt(0, weights.length - 1)\n  const { min, max } = spec[weights[rand]]\n  return randomInt(min, max)\n}\n\n/**\n * Fisher-Yates Shuffle: unbiased array shuffle algorithm\n * @param {Array} xs\n * @returns {Array}\n */\nexport function shuffle(xs) {\n  const ys = xs.slice()\n\n  let currentIndex = ys.length\n  let randomIndex = null\n  let temporaryValue = null\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex -= 1\n\n    temporaryValue = ys[currentIndex]\n    ys[currentIndex] = ys[randomIndex]\n    ys[randomIndex] = temporaryValue\n  }\n\n  return ys\n}\n","/**\n */\nexport function isDef(x) {\n  return !isUndef(x) && !isNull(x)\n}\n\n/**\n * Does not match: `null`\n */\nexport function isUndef(val) {\n  return typeof val === 'undefined'\n}\n\n/**\n * Does not match: `undefined`\n */\nexport function isNull(val) {\n  return val === null\n}\n\n/**\n */\nexport function isBool(val) {\n  return typeof val === 'boolean'\n}\n\n/**\n * Does not match: `NaN`, `Infinity`, `-Infinity`\n */\nexport function isNum(val) {\n  return typeof val === 'number' && isFinite(val)\n}\n\n/**\n * Does not match: `NaN`, `Infinity`, `-Infinity`\n */\nexport function isInt(val) {\n  return typeof val === 'number' && isFinite(val) && Math.floor(val) === val\n}\n\n/**\n */\nexport function isStr(val) {\n  return typeof val === 'string'\n}\n\n/**\n */\nexport function isArr(val) {\n  return Array.isArray(val)\n}\n\n/**\n * Does not match: arrays, functions, symbols\n */\nexport function isObj(val) {\n  return val === Object(val) && !isArr(val) && !isFunc(val) && !isSymbol(val)\n}\n\n/**\n */\nexport function isPOJO(x) {\n  return isObj(x) && Object.getPrototypeOf(x) === Object.prototype\n}\n\n/**\n */\nexport function isFunc(val) {\n  return typeof val === 'function'\n}\n\n/**\n */\nexport function isSymbol(val) {\n  return typeof val === 'symbol'\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { compose, map, filter, assoc, clone } from 'ramda'\n\nimport { fn, data } from '../../../data'\n\n// import useVisualViewport from '../../../hooks/viewport'\nimport { shuffle } from '../../../utils/random'\nimport { isArr } from '../../../utils/type-checks'\n\nimport './index.scss'\n\nconst FOCUS_DELAY_MS = 50\nconst ENTER_KEY = 13\n\nexport const shuffleData = compose(shuffle, map(assoc('correct', null)), clone)\n\nexport const getResults = (answers) => {\n  const n = filter((x) => x.correct === true, answers)\n  const p = (n.length / answers.length) * 100\n  const result = {\n    total: answers.length.toString(),\n    correct: n.length.toString(),\n    percentage: p.toFixed(2).toString(),\n  }\n  if (result.percentage.substr(-3) === '.00') {\n    result.percentage = p.toFixed(0).toString()\n  }\n  return result\n}\n\nexport default function PracticeReadPage() {\n  const answerRef = useRef(null)\n\n  // const visualViewport = useVisualViewport()\n\n  const [state, setState] = useState('start')\n  const [format, setFormat] = useState()\n  const [direction, setDirection] = useState()\n\n  const [answers, setAnswers] = useState(null)\n  const checkAnswer = () => {\n    const x = answers[question]\n    x.answer = answerRef.current.value\n    x.correct = direction.validate(x, x.answer)\n\n    setAnswers(answers)\n    setState(x.correct ? 'correct' : 'incorrect')\n  }\n\n  const [question, setQuestion] = useState(0)\n  const nextQuestion = () => {\n    const next = question + 1\n    if (next >= answers.length) {\n      setState('done')\n    } else {\n      setQuestion(next)\n      setState('question')\n    }\n  }\n\n  useEffect(() => {\n    if (answerRef.current)\n      setTimeout(() => answerRef.current.focus(), FOCUS_DELAY_MS)\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction = () => 0\n  switch (state) {\n    case 'question':\n      nextAction = () => checkAnswer()\n      return (\n        <section className='section section--read-practice'>\n          <p className='assignment-description'>Translate {direction.name}</p>\n          <p className='assignment-text'>\n            {direction.question(answers[question])}\n          </p>\n          <input ref={answerRef} className='practice-input' type='text' />\n          <button className='cta--next' onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => nextQuestion()\n      return (\n        <section className='section section--correct section--read-practice'>\n          <p className='assignment-result'>\n            <span role='img' aria-label='check'>\n              ✔\n            </span>{' '}\n            Correct!\n          </p>\n          <button className='cta--next' onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => nextQuestion()\n      return (\n        <section className='section section--incorrect section--read-practice'>\n          <p className='assignment-result'>\n            <span role='img' aria-label='cross'>\n              ❌\n            </span>{' '}\n            Incorrect!\n          </p>\n          <p className='assignment-description'>Your answer:</p>\n          <p className='assignment-description'>{answers[question].answer}</p>\n          <p className='assignment-description'>Correct answer(s):</p>\n          {direction.answers(answers[question]).map((x) => (\n            <p className='assignment-description'>{x}</p>\n          ))}\n          <button className='cta--next' onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'done':\n      nextAction = () => setState('start')\n      const results = getResults(answers)\n      return (\n        <section className='section section--vocab-practice'>\n          <p className='assignment-result'>\n            {results.correct} out of {results.total} ({results.percentage}%)\n          </p>\n          <button className='cta--next' onClick={nextAction}>\n            Restart\n          </button>\n        </section>\n      )\n\n    case 'choose-vocab':\n      nextAction = (vocab) => () => {\n        setAnswers(shuffleData(direction.list(data, vocab)))\n        setQuestion(0)\n        setState('question')\n      }\n      return (\n        <section className='section section--read-practice'>\n          <p className='assignment-description assignment-description--header'>\n            {format.name} &raquo; {direction.name}\n          </p>\n          <p className='assignment-description'>\n            What vocabulary do you want to practice?\n          </p>\n          {direction.vocabs.map((vocab) => (\n            <button className='cta' onClick={nextAction(vocab)}>\n              {vocab.toUpperCase()}\n            </button>\n          ))}\n        </section>\n      )\n\n    case 'choose-direction':\n      nextAction = (direction) => () => {\n        setDirection(direction)\n        if (isArr(direction.vocabs)) return setState('choose-vocab')\n\n        setAnswers(shuffleData(direction.list(data)))\n        setQuestion(0)\n        setState('question')\n      }\n      return (\n        <section className='section section--read-practice'>\n          <p className='assignment-description assignment-description--header'>\n            {format.name}\n          </p>\n          <p className='assignment-description'>\n            What direction do you want to practice?\n          </p>\n          {format.directions.map((direction) => (\n            <button\n              className='cta cta--smaller'\n              onClick={nextAction(direction)}\n            >\n              {direction.name}\n            </button>\n          ))}\n        </section>\n      )\n\n    default:\n    case 'start':\n    case 'choose-type':\n      nextAction = (format) => () => {\n        setFormat(format)\n        setState('choose-direction')\n      }\n      return (\n        <section className='section section--read-practice'>\n          <p className='assignment-description'>\n            What format do you want to practice?\n          </p>\n          {fn.read.map((format) => (\n            <button className='cta' onClick={nextAction(format)}>\n              {format.name}\n            </button>\n          ))}\n        </section>\n      )\n  }\n}\n","const mods = {\n  neg: '负', // fù\n  1e1: '十', // shí\n  1e2: '百', // bǎi\n  1e3: '千', // qiān\n  1e4: '万', // wàn\n  1e8: '亿', // yì\n  1e12: '兆', // zhào\n  1e16: '京', // jīng\n  1e20: '垓', // gāi\n  1e24: '秭', // zǐ\n  1e28: '穰', // ráng\n  1e32: '沟', // gōu\n  1e36: '涧', // jiàn\n  1e40: '正', // zhēng\n  1e44: '载', // zài\n}\nconst base = [\n  '零', // líng\n  '一', // yī\n  '二', // èr\n  '三', // sān\n  '四', // sì\n  '五', // wǔ\n  '六', // liù\n  '七', // qī\n  '八', // bā\n  '九', // jiǔ\n  '十', // shí\n]\n\nexport default function arabic2chinese(a) {\n  let s = ''\n\n  if (a < 0) {\n    s += mods.neg\n    a = Math.abs(a)\n  }\n\n  // 1e4-1e8 category patterns\n  if (a >= 1e4 && a <= 1e8 - 1) {\n    const _ = (a - (a % 1e4)) / 1e4\n    s += category(_)\n    s += mods[1e4]\n\n    // dispatch to < 1e4 patterns\n    a = a % 1e4\n    if (a < 1e3) {\n      s += base[0]\n    }\n  }\n\n  // < 1e4 category patterns\n  s += category(a)\n\n  // More than one zero in a row becomes a single zero\n  s = s.replace(new RegExp(base[0] + '{2,3}', 'g'), base[0])\n\n  // Trailing zero's\n  if (s.length > 1) {\n    s = s.replace(new RegExp(base[0] + '+$'), '')\n  }\n\n  return s\n}\n\nfunction category(a) {\n  const div1000 = (x) => x % 1000 === 0\n  const div100x = (x) => x % 1000 < 10\n  const div10x0 = (x) => div1000(x - (x % 100)) && div10(x % 10)\n  const div10xx = (x) => div1000(x - (x % 100)) && !div10(x % 10)\n  const div100 = (x) => x % 100 === 0\n  const div10x = (x) => div100(x - (x % 10))\n  const div10 = (x) => x % 10 === 0\n\n  const pattern_thousands = (x) => base[x / 1000] + mods[1e3]\n  const pattern_101_999 = (x) => base[Math.floor(x / 100)] + mods[1e2]\n  const pattern_hundreds = (x) => base[x / 100] + mods[1e2]\n  const pattern_21_99 = (x) =>\n    base[Math.floor(x / 10)] + mods[1e1] + base[x - Math.floor(x / 10) * 10]\n  const pattern_tens = (x) => base[x / 10] + mods[1e1]\n  const pattern_10_19 = (x) => mods[1e1] + base[x - 10]\n  const pattern_0_10 = (x) => base[x]\n\n  let s = ''\n\n  // thousands pattern: 1000 = 1+1000\n  if (a >= 1000 && a <= 9999 && div1000(a)) {\n    s += pattern_thousands(a)\n  }\n\n  // 1001-9999 pattern: 1234 = 1+1000+2+100+3+10+4\n  if (a >= 1000 && a <= 9999 && !div1000(a)) {\n    s += pattern_thousands(a - (a % 1000))\n\n    // [1001] with zero's in the hundreds and tens place: 1001 = 1+1000+0+1\n    if (div100x(a)) {\n      s += base[0]\n      s += pattern_0_10(a % 100)\n    }\n\n    // [1010] with zero's in the hundreds and ones place: 1010 = 1+1000+0+1+10\n    else if (div10x0(a)) {\n      s += base[0]\n      s += pattern_tens(a % 100) // a = [1234 -> 34]\n    }\n\n    // [1011] with a zero in the hundreds place: 1011 = 1+1000+0+1+10+1\n    else if (div10xx(a)) {\n      s += base[0]\n      s += pattern_21_99(a % 100) // a = [1234 -> 34]\n    }\n\n    // dispatch to < 1000 patterns\n    else {\n      a -= Math.floor(a / 1000) * 1000\n    }\n  }\n\n  // hundreds pattern: 100 = 1+100\n  if (a >= 100 && a <= 999 && div100(a)) {\n    s += pattern_hundreds(a)\n  }\n\n  // 101-999 pattern\n  if (a >= 101 && a <= 999 && !div100(a)) {\n    s += pattern_101_999(a)\n\n    // with a zero in the ones place: 760 = 7+100+6+10\n    if (!div100(a) && div10(a) && !div10x(a)) {\n      s += pattern_tens(a - Math.floor(a / 100) * 100)\n    }\n\n    // with a zero in the tens place: 506 = 5+100+0+6\n    if (!div100(a) && !div10(a) && div10x(a)) {\n      s += base[0]\n      s += pattern_0_10(a - Math.floor(a / 100) * 100)\n    }\n\n    // generic: 135 = 1+100+3+10+5\n    if (!div100(a) && !div10(a) && !div10x(a)) {\n      s += pattern_21_99(a - Math.floor(a / 100) * 100)\n    }\n  }\n\n  // tens pattern: 30 = 3+10\n  if (a >= 20 && a <= 90 && div10(a)) {\n    s += pattern_tens(a)\n  }\n\n  // 21-99 pattern: 21 = 2+10+1\n  if (a >= 21 && a <= 99 && !div10(a)) {\n    s += pattern_21_99(a)\n  }\n\n  // 11-19 pattern: 11 = 10+1\n  if (a >= 11 && a <= 19) {\n    s += pattern_10_19(a)\n  }\n\n  // 0-10 pattern\n  if (a >= 0 && a <= 10) {\n    s += pattern_0_10(a)\n  }\n\n  return s\n}\n","import React, { useEffect, useRef, useState } from 'react'\n// import useVisualViewport from '../../../hooks/viewport'\n\nimport { weightedRandomInt } from '../../../utils/random'\nimport arabic2chinese from '../../../utils/arabic2chinese'\nimport { isEqualCharacters } from '../../../utils/chinese'\n\nimport './index.scss'\n\nconst FOCUS_DELAY_MS = 50\nconst ENTER_KEY = 13\n\nconst getSemiRandomInt = () =>\n  weightedRandomInt([\n    { weight: 2 /* 25% */, min: 0, max: 99 },\n    { weight: 2 /* 25% */, min: 0, max: 990 },\n    { weight: 2 /* 25% */, min: 0, max: 9999 },\n    { weight: 1 /* 12.5% */, min: -999, max: -1 },\n    { weight: 1 /* 12.5% */, min: -9999, max: -1 },\n  ])\n\nexport default function Numbers() {\n  const answerRef = useRef(null)\n\n  // const visualViewport = useVisualViewport()\n\n  const [state, setState] = useState('start')\n\n  const [answers, setAnswers] = useState([])\n  const addAnswer = (a) => setAnswers(answers.concat(a))\n  const checkAnswer = (n) => {\n    const correct = arabic2chinese(n)\n    const attempt = answerRef.current.value\n    setState(isEqualCharacters(attempt, correct) ? 'correct' : 'incorrect')\n    addAnswer({ n, attempt, correct })\n  }\n\n  useEffect(() => {\n    if (answerRef.current)\n      setTimeout(() => answerRef.current.focus(), FOCUS_DELAY_MS)\n  })\n\n  useEffect(() => {\n    const fn = (e) => {\n      e.preventDefault()\n      if (e.keyCode === ENTER_KEY) nextAction()\n    }\n    window.addEventListener('keyup', fn)\n    return () => window.removeEventListener('keyup', fn)\n  })\n\n  let nextAction\n  switch (state) {\n    case 'question':\n      const int = getSemiRandomInt()\n      nextAction = () => checkAnswer(int)\n      return (\n        <section className='section section--numbers-practice'>\n          <p className='assignment-description'>Translate to Chinese</p>\n          <p className='assignment-text'>{int}</p>\n          <input ref={answerRef} className='practice-input' type='text' />\n          <button className='cta--next' onClick={nextAction}>\n            Check\n          </button>\n        </section>\n      )\n\n    case 'correct':\n      nextAction = () => setState('question')\n      return (\n        <section className='section section--correct section--numbers-practice'>\n          <p className='assignment-result'>\n            <span role='img' aria-label='check'>\n              ✔\n            </span>{' '}\n            Correct!\n          </p>\n          <button className='cta--next' onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    case 'incorrect':\n      nextAction = () => setState('question')\n      return (\n        <section className='section section--incorrect section--numbers-practice'>\n          <p className='assignment-result'>\n            <span role='img' aria-label='cross'>\n              ❌\n            </span>{' '}\n            Incorrect!\n          </p>\n          {answers[answers.length - 1] && (\n            <p className='assignment-description'>\n              Correct answer: {answers[answers.length - 1].correct}\n            </p>\n          )}\n          <button className='cta--next' onClick={nextAction}>\n            Continue\n          </button>\n        </section>\n      )\n\n    default:\n    case 'start':\n      nextAction = () => setState('question')\n      return (\n        <section className='section section--numbers-practice'>\n          <p className='assignment-description'>\n            Translate arabic numbers to Chinese\n          </p>\n          <button className='cta--next' onClick={nextAction}>\n            Start\n          </button>\n        </section>\n      )\n  }\n}\n","import Home from '../pages/home'\nimport NotFound from '../pages/not-found'\n\nimport Read from '../pages/practice/read'\nimport Numbers from '../pages/numbers'\n\nexport default [\n  {\n    path: '/read',\n    component: Read,\n    name: 'Practice: Read',\n  },\n\n  {\n    path: '/numbers',\n    component: Numbers,\n    name: 'Practice: Numbers',\n  },\n\n  {\n    path: '/',\n    component: (props) => (props.match.isExact ? Home(props) : NotFound(props)),\n    name: 'Home',\n  },\n]\n","import React from 'react'\n\nexport default function Home() {\n  return <div>Home</div>\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return <div>404 Not Found</div>\n}\n","import React from 'react'\n\nimport './index.scss'\n\nfunction Logo() {\n  return (\n    <figure className=\"logo\">\n      <img className=\"logo__svg\" alt=\"练习中文\" src=\"./static/img/logo.svg\" />\n      <h1 className=\"logo__title\">\n        <span>Practice</span> <span>Chinese</span>\n      </h1>\n    </figure>\n  )\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { find, filter, concat } from 'ramda'\n\nimport './index.scss'\n\n// Sort 'Search' first, remove NotFound\nexport function sortRoutes(routes) {\n  const isSearch = (x) => x.path === '/'\n  const isNotFound = (x) => x.path\n  const x = find(isSearch, routes)\n  const xs = filter((y) => y !== x && isNotFound(y), routes)\n  return concat([x], xs)\n}\n\nexport default function Nav({ routes }) {\n  const [isOpen, setOpen] = useState(false)\n\n  // Recursively render ol>li\n  const renderRoutes = (routes, indent = 0) => (\n    <ol className={`menu menu--indent${indent}`}>\n      {routes.map((route, i) => (\n        <li key={i}>\n          <Link to={route.path} onClick={() => setOpen(false)}>\n            {route.name}\n          </Link>\n          {route.routes && renderRoutes(route.routes, indent + 1)}\n        </li>\n      ))}\n    </ol>\n  )\n\n  if (!isOpen) {\n    return (\n      <div className=\"nav\">\n        <button\n          className=\"nav__toggle nav__toggle--open\"\n          onClick={() => setOpen(true)}\n        ></button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"nav\">\n      <button\n        className=\"nav__toggle nav__toggle--close\"\n        onClick={() => setOpen(false)}\n      ></button>\n      <nav className=\"nav__menu\">{renderRoutes(sortRoutes(routes))}</nav>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Logo from '../../atoms/logo'\nimport Nav from '../../atoms/nav'\n\nexport default function Header({ routes }) {\n  return (\n    <>\n      <Link to={'/'} className=\"logo__parent\">\n        <Logo />\n      </Link>\n      <Nav routes={routes} />\n    </>\n  )\n}\n","import React from 'react'\n\nimport { HashRouter as Router } from 'react-router-dom'\nimport RenderRoute from '../../utils/render-route'\nimport pkg from '../../../package.json'\nimport routes from './routes.js'\n\nimport Header from '../../presenters/molecules/header'\n\nimport './index.scss'\n\nexport default function App() {\n  return (\n    <Router basename={pkg.homepage}>\n      <div className=\"layout__container\">\n        <header className=\"layout__header\">\n          <Header routes={routes} />\n        </header>\n        <main className=\"layout__body\">\n          <RenderRoute routes={routes} />\n        </main>\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './containers/app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}